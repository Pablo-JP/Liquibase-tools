CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SEL_LOAN_PRODUCT (
    PA_LOAN_ID                  IN      SC_CREDIT.TA_LOAN.FI_LOAN_ID%TYPE
   ,PA_CUR_RESULTS              OUT     SC_CREDIT.PA_TYPES.TYP_CURSOR
   ,PA_STATUS_CODE              OUT     INTEGER
   ,PA_STATUS_MSG               OUT     VARCHAR2)

/* **************************************************************
* PROJECT: NCP-OUTSTANDING BALANCE
* DESCRIPTION: PROCEDURE TO SELECT THE LOAN PRODUCT AND RULE
* CREATED DATE: NOV/07/2024
* CREATOR: RICARDO HAZAEL GOMEZ ALVAREZ
************************************************************** */
AS
    CSG_ARROW                   CONSTANT VARCHAR2(5) := ' -> ';
    CSG_X                       CONSTANT VARCHAR2(5) := 'X';
    CSG_0                       CONSTANT SIMPLE_INTEGER := 0;
    CSG_SUCCESS_CODE            CONSTANT SIMPLE_INTEGER := 0;
    CSG_SUCCESS_MSG             CONSTANT VARCHAR2(10) := 'SUCCESS';
    CSG_NO_DATA_FOUND_CODE      CONSTANT SIMPLE_INTEGER := -20204;
    CSG_NO_DATA_FOUND_MSG       CONSTANT VARCHAR2(50) := 'THE DATA DOES NOT EXIST';
    CSG_SP_SEL_LOAN_PRODUCT  CONSTANT VARCHAR2(50) := 'SP_SEL_LOAN_PRODUCT';

    VL_LOAN_ID                SC_CREDIT.TA_PAYMENT_SCHEDULE.FI_LOAN_ID%TYPE;

     EXC_NO_DATA_FOUND         EXCEPTION;
     PRAGMA EXCEPTION_INIT (EXC_NO_DATA_FOUND, CSG_NO_DATA_FOUND_CODE);
BEGIN

    SELECT COUNT(*)
    INTO VL_LOAN_ID
    FROM SC_CREDIT.TA_LOAN
    WHERE FI_LOAN_ID = PA_LOAN_ID;
    IF VL_LOAN_ID = CSG_0 THEN
    RAISE EXC_NO_DATA_FOUND;
    END IF;

    OPEN PA_CUR_RESULTS FOR
        SELECT L.FI_PRODUCT_ID
              ,L.FI_RULE_ID
          FROM SC_CREDIT.TA_LOAN L
         WHERE L.FI_LOAN_ID = PA_LOAN_ID;

    PA_STATUS_CODE := CSG_SUCCESS_CODE;
    PA_STATUS_MSG := CSG_SUCCESS_MSG;

EXCEPTION
        WHEN EXC_NO_DATA_FOUND THEN
        PA_STATUS_CODE := CSG_NO_DATA_FOUND_CODE;
        PA_STATUS_MSG := CSG_NO_DATA_FOUND_MSG || CSG_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        OPEN PA_CUR_RESULTS FOR
            SELECT
            NULL FI_PRODUCT_ID
            ,NULL FI_RULE_ID
            FROM DUAL;

        WHEN OTHERS THEN
        PA_STATUS_CODE := SQLCODE;
        PA_STATUS_MSG := SQLERRM || CSG_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        OPEN PA_CUR_RESULTS FOR
            SELECT
            NULL FI_PRODUCT_ID
            ,NULL FI_RULE_ID
            FROM DUAL;
        SC_CREDIT.SP_ERROR_LOG(CSG_SP_SEL_LOAN_PRODUCT, SQLCODE, SQLERRM,
        DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, CSG_X, CSG_X);
END SP_SEL_LOAN_PRODUCT;

/

GRANT EXECUTE ON SC_CREDIT.SP_SEL_LOAN_PRODUCT TO USRNCPCREDIT1
/
GRANT EXECUTE ON SC_CREDIT.SP_SEL_LOAN_PRODUCT TO USRPURPOSEWS
/
