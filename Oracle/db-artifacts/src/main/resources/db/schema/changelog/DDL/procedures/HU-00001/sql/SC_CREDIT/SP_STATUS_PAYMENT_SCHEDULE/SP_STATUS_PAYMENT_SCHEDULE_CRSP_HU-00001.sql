CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_STATUS_PAYMENT_SCHEDULE (
    PA_PAYMENT_SCHEDULES IN CLOB,
    PA_STATUS_MSG        OUT VARCHAR2,
    PA_STATUS_CODE       OUT NUMBER
) IS

  VG_COUNT_UPDATE    NUMBER(3,0);
  CSL_0              CONSTANT SIMPLE_INTEGER := 0;
  CSL_404            CONSTANT SIMPLE_INTEGER := 404;
  CSL_SUCCESS        CONSTANT VARCHAR2(8) := 'OK';
  CSL_JSON           CONSTANT VARCHAR2(5) := NULL;
  CSL_UUID_TRACKING  CONSTANT VARCHAR2(5) := NULL;
BEGIN
  PA_STATUS_CODE := CSL_0;


FOR rec IN (
    SELECT VG_LOAN_ID,
           VG_ADMIN_CENTER_ID,
           VG_PAYMENT_NUMBER_ID,
           VG_PAYMENT_STATUS_ID,
           VG_PAYMENT_BALANCE,
           TO_DATE(VG_PAYMENT_DATE, 'dd/MM/yy') AS VG_PAYMENT_DATE
    FROM JSON_TABLE(
           PA_PAYMENT_SCHEDULES,
           '$.paymentSchedules[*]'
           COLUMNS (
             VG_LOAN_ID          NUMBER PATH '$.loanId',
             VG_ADMIN_CENTER_ID   NUMBER PATH '$.adminCenterId',
             VG_PAYMENT_NUMBER_ID NUMBER PATH '$.paymentNumberId',
             VG_PAYMENT_STATUS_ID NUMBER PATH '$.paymentStatusId',
             VG_PAYMENT_BALANCE  NUMBER PATH '$.paymentBalance',
             VG_PAYMENT_DATE     VARCHAR2(50) PATH '$.paymentDate'
           )
         )
  ) LOOP

UPDATE SC_CREDIT.TA_PAYMENT_SCHEDULE
SET FI_PMT_SCHEDULE_STATUS_ID = rec.VG_PAYMENT_STATUS_ID,
    FD_MODIFICATION_DATE = SYSDATE,
    FN_PAYMENT_BALANCE = rec.VG_PAYMENT_BALANCE,
    FD_PAYMENT_DATE = rec.VG_PAYMENT_DATE
WHERE FI_LOAN_ID = rec.VG_LOAN_ID
  AND FI_ADMIN_CENTER_ID = rec.VG_ADMIN_CENTER_ID
  AND FI_PAYMENT_NUMBER_ID = rec.VG_PAYMENT_NUMBER_ID;

VG_COUNT_UPDATE := SQL%ROWCOUNT;

    IF VG_COUNT_UPDATE > CSL_0 THEN
      PA_STATUS_MSG := CSL_SUCCESS;
ELSE
      PA_STATUS_MSG := 'NOT UPDATED';
      PA_STATUS_CODE := CSL_404;
END IF;
END LOOP;

COMMIT;

EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG := SQLERRM || '->' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
    SC_CREDIT.SP_ERROR_LOG(
       UTL_CALL_STACK.SUBPROGRAM(1)(1),
       SQLCODE,
       SQLERRM,
       DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
       ,CSL_UUID_TRACKING
       ,CSL_JSON

    );
END SP_STATUS_PAYMENT_SCHEDULE;

/

GRANT EXECUTE ON SC_CREDIT.SP_STATUS_PAYMENT_SCHEDULE TO USRNCPCREDIT1
/
