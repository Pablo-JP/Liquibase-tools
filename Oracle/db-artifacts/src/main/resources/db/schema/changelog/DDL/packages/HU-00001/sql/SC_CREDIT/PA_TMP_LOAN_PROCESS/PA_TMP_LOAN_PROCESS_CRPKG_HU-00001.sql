CREATE OR REPLACE  PACKAGE SC_CREDIT.PA_TMP_LOAN_PROCESS 
   AS

   /*
   *DESCRIPCION: PROCEDIMIENTO QUE REALIZA LAS OPERACIONES CRUD DE LA TABLA     TA_TMP_LOAN_PROCESS
   * PROJECT: LOAN LIFE CYCLE
   *CREADOR: IVAN LOPEZ
   *FECHA DE CREACION: 19/12/24
   */

   PROCEDURE SPTA_TMP_LOAN_PROCESS
      (
      PA_ACCION                IN NUMBER,
      PA_FI_LOAN_ID            IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_LOAN_ID%TYPE,
      PA_FI_ADMIN_CENTER_ID    IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_ADMIN_CENTER_ID%TYPE,
      PA_FI_PROCESS            IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_PROCESS%TYPE,
      PA_FC_USER               IN VARCHAR2,
      PA_FD_CREATED_DATE       IN VARCHAR2,
      PA_FD_MODIFICATION_DATE  IN VARCHAR2,
      PA_FI_TRACK              IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_TRACK%TYPE,
      PA_STATUS_CODE                OUT NUMBER,
      PA_STATUS_MSG           OUT VARCHAR2,
      PA_CURSOR                OUT   SC_CREDIT.PA_TYPES.TYP_CURSOR);

END PA_TMP_LOAN_PROCESS;

/




CREATE OR REPLACE  PACKAGE BODY SC_CREDIT.PA_TMP_LOAN_PROCESS 
   AS
      /*
      *PROYECTO: CORE BANCARIO
      *DESCRIPCION: PROCEDIMIENTOS DE LAS OPERACIONES CRUD
      *OPERACIONES:
      * 1. SELECT
      * 2. INSERT
      * 3. UPDATE
      * 4. DELETE
      */

   --TIPOS DE OPERACIONES
   CSG_OPSELECT      CONSTANT SIMPLE_INTEGER := 1;
   CSG_OPINSERT      CONSTANT SIMPLE_INTEGER := 2;
   CSG_OPUPDATE      CONSTANT SIMPLE_INTEGER := 3;
   CSG_OPDELETE      CONSTANT SIMPLE_INTEGER := 4;

   --CONSTANTES CODIGOS DE RESPUESTA
   CSG_CODERROR404   CONSTANT SIMPLE_INTEGER := 404;
   CSG_CODERROR400   CONSTANT SIMPLE_INTEGER := 400;
   CSG_CODERROR500   CONSTANT SIMPLE_INTEGER := 500;
   CSG_CODOK200      CONSTANT SIMPLE_INTEGER := 200;

   --CONSTANTES GENERICAS
   CSG_0             CONSTANT SIMPLE_INTEGER := 0;
   CSG_1             CONSTANT SIMPLE_INTEGER := 1;
   CSG_FMTFECHA      CONSTANT VARCHAR2(30 CHAR):= 'DD/MM/YYYY hh24:mi:ss';
   CSG_MAXREGSEL     CONSTANT SIMPLE_INTEGER := 200;

   --CONSTANTES MANEJO DE ERRORES
   CSG_FIPKG         CONSTANT SIMPLE_INTEGER := 1;
   CSG_FISP          CONSTANT SIMPLE_INTEGER := 2;
   CSG_ACCIONINVALID CONSTANT SIMPLE_INTEGER := -20003;


   -- Mensajes de Error
   CSG_OPNOVALIDA    CONSTANT VARCHAR2(40 CHAR) := 'Accion no parametrizada-';
   CSG_SINACTUALIZAR CONSTANT VARCHAR2(40 CHAR) := 'No se encontraron datos';
   CSG_EXITOSA       CONSTANT VARCHAR2(40 CHAR) := 'Operacion exitosa';
   CSG_IDLOG         CONSTANT VARCHAR2(40 CHAR) := 'IDLOG (%S), ';
   CSG_SUST          CONSTANT VARCHAR2(40 CHAR) := '%S';
   CSG_PUNTO         CONSTANT VARCHAR2(40 CHAR) := '.';
   VG_CONTEOREG      NUMBER(10);

   /*
   *DESCRIPCION: PROCEDIMIENTO PARA LA ASIGNACION DE VARIABLES DE SALIDA
   *  INPUT PARAMETERS
   *     VG_CONTEOREG
   *     PA_ACCION
   *  OUTPUT PARAMETERS
   *     PA_CODIGO
   *     PA_DESCRIPCION
   */
   PROCEDURE SPGENERARESP(
      VG_CONTEOREG             IN NUMBER,
      PA_ACCION                IN NUMBER,
      PA_CODIGO                OUT NUMBER,
      PA_DESCRIPCION           OUT VARCHAR2)
   AS
   BEGIN
      -- Asigna codigo de salida
      IF VG_CONTEOREG = CSG_0 AND  PA_ACCION != CSG_OPSELECT
      THEN
         PA_CODIGO := CSG_CODERROR404;
         PA_DESCRIPCION := CSG_SINACTUALIZAR;
      ELSE
         -- Se envia codigo 200
         PA_CODIGO := CSG_CODOK200;
         -- Se envia respuesta exitosa del SPTACOMPLEMIVA
         PA_DESCRIPCION := CSG_EXITOSA;
      END IF;
   END;


   /*
   *DESCRIPCION: PROCEDIMIENTO PARA LA ASIGNACION DE VARIABLES DE SALIDA
   *  INPUT PARAMETERS
   *     PA_ERRCODE
   *     PA_FIIDLOG
   *     PA_ERRMSG
   *  OUTPUT PARAMETERS
   *     PA_CODIGO
   *     PA_DESCRIPCION
   */
   PROCEDURE SPGENERARESPERR(
   PA_ERRCODE              IN NUMBER,
   PA_FIIDLOG              IN NUMBER,
   PA_ERRMSG               IN VARCHAR2,
   PA_CODIGO               OUT NUMBER,
   PA_DESCRIPCION          OUT VARCHAR2)
   AS
   BEGIN
      PA_CODIGO := CASE PA_ERRCODE WHEN CSG_ACCIONINVALID THEN CSG_CODERROR400
                                ELSE CSG_CODERROR500
                   END;
      PA_DESCRIPCION :=REPLACE(CSG_IDLOG,CSG_SUST, PA_FIIDLOG) || PA_ERRMSG;
   END;

   /*
   *DESCRIPCION: PROCEDIMIENTO QUE REALIZA LAS OPERACIONES CRUD DE LA TABLA     TA_TMP_LOAN_PROCESS
   */

   PROCEDURE SPTA_TMP_LOAN_PROCESS(
      PA_ACCION                IN NUMBER,
      PA_FI_LOAN_ID            IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_LOAN_ID%TYPE,
      PA_FI_ADMIN_CENTER_ID    IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_ADMIN_CENTER_ID%TYPE,
      PA_FI_PROCESS            IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_PROCESS%TYPE,
      PA_FC_USER               IN VARCHAR2,
      PA_FD_CREATED_DATE       IN VARCHAR2,
      PA_FD_MODIFICATION_DATE  IN VARCHAR2,
      PA_FI_TRACK              IN     SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_TRACK%TYPE,
      PA_STATUS_CODE                OUT NUMBER,
      PA_STATUS_MSG           OUT VARCHAR2,
      PA_CURSOR                OUT   SC_CREDIT.PA_TYPES.TYP_CURSOR)
   IS
      CSL_FCPROCESO     CONSTANT VARCHAR2(80) := 'MTO   TA_TMP_LOAN_PROCESS';

   BEGIN
      /*
       *   LECTURA DE DATOS
       */



      IF PA_ACCION = CSG_OPSELECT THEN
           OPEN PA_CURSOR FOR
         SELECT
               TA.FI_LOAN_ID                                      AS FI_LOAN_ID,
               TA.FI_ADMIN_CENTER_ID                              AS FI_ADMIN_CENTER_ID,
               TA.FI_PROCESS                                      AS FI_PROCESS,
               TA.FC_USER                                         AS FC_USER,
               TO_CHAR(TA.FD_CREATED_DATE,CSG_FMTFECHA)           AS FD_CREATED_DATE,
               TO_CHAR(TA.FD_MODIFICATION_DATE,CSG_FMTFECHA)      AS FD_MODIFICATION_DATE,
               TA.FI_TRACK                                        AS FI_TRACK
            FROM     SC_CREDIT.TA_TMP_LOAN_PROCESS TA
            WHERE  (PA_FI_LOAN_ID=FI_LOAN_ID OR PA_FI_LOAN_ID IS NULL)
               AND (PA_FI_ADMIN_CENTER_ID=FI_ADMIN_CENTER_ID OR PA_FI_ADMIN_CENTER_ID IS NULL)
               AND (PA_FI_PROCESS=FI_PROCESS OR PA_FI_PROCESS IS NULL)
                AND (PA_FI_TRACK=FI_TRACK OR PA_FI_TRACK IS NULL)
               AND ROWNUM<CSG_MAXREGSEL;

      /*
       *   INSERCION DE DATOS
       */
      ELSIF PA_ACCION =  CSG_OPINSERT THEN
         INSERT INTO     SC_CREDIT.TA_TMP_LOAN_PROCESS(
            FI_LOAN_ID,
            FI_ADMIN_CENTER_ID,
            FI_PROCESS,
            FC_USER,
            FD_CREATED_DATE,
            FD_MODIFICATION_DATE,
            FI_TRACK
         )
         VALUES (
            PA_FI_LOAN_ID,
            PA_FI_ADMIN_CENTER_ID,
            PA_FI_PROCESS,
            PA_FC_USER,
            TO_DATE(PA_FD_CREATED_DATE,CSG_FMTFECHA),
            TO_DATE(PA_FD_MODIFICATION_DATE,CSG_FMTFECHA),
            PA_FI_TRACK
         );

      /*
       *   ACTUALIZACION DE DATOS
       */
      ELSIF PA_ACCION = CSG_OPUPDATE THEN
         UPDATE     SC_CREDIT.TA_TMP_LOAN_PROCESS SET
            FC_USER = NVL(PA_FC_USER,FC_USER),
            FD_CREATED_DATE = NVL2(PA_FD_CREATED_DATE,TO_DATE(PA_FD_CREATED_DATE,CSG_FMTFECHA),FD_CREATED_DATE),
            FD_MODIFICATION_DATE = NVL2(PA_FD_MODIFICATION_DATE,TO_DATE(PA_FD_MODIFICATION_DATE,CSG_FMTFECHA),FD_MODIFICATION_DATE),
            FI_TRACK = NVL(PA_FI_TRACK,FI_TRACK)
         WHERE PA_FI_LOAN_ID=FI_LOAN_ID
            AND PA_FI_ADMIN_CENTER_ID=FI_ADMIN_CENTER_ID
            AND PA_FI_PROCESS=FI_PROCESS
            AND PA_FI_TRACK=FI_TRACK
;

      /*
       *   BORRADO DE DATOS
       */
      ELSIF PA_ACCION = CSG_OPDELETE THEN
         DELETE FROM     SC_CREDIT.TA_TMP_LOAN_PROCESS
         WHERE  PA_FI_LOAN_ID=FI_LOAN_ID
            AND PA_FI_ADMIN_CENTER_ID=FI_ADMIN_CENTER_ID
            AND PA_FI_PROCESS=FI_PROCESS
            AND PA_FI_TRACK=FI_TRACK
;
      ELSE
            RAISE_APPLICATION_ERROR( CSG_ACCIONINVALID, CSG_OPNOVALIDA || PA_ACCION );
      END IF;
      SPGENERARESP(SQL%ROWCOUNT,PA_ACCION,PA_STATUS_CODE,PA_STATUS_MSG);
          COMMIT;
   --Bloque de excepciones
   EXCEPTION
      WHEN OTHERS THEN
            ROLLBACK;
        OPEN PA_CURSOR FOR
        SELECT NULL FROM DUAL;
        PA_STATUS_CODE := SQLCODE;
        PA_STATUS_MSG := SQLERRM  || ' -> ' ||  DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
           SC_CREDIT.SP_ERROR_LOG(UTL_CALL_STACK.SUBPROGRAM(CSG_1)(CSG_FIPKG)
                                    ,SQLCODE
                                    ,SQLERRM
                                    ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
                                    ,PA_FI_LOAN_ID ||',' ||PA_FI_ADMIN_CENTER_ID||','||PA_FI_PROCESS||','||PA_ACCION
                                    ,NULL);
   END SPTA_TMP_LOAN_PROCESS;

END PA_TMP_LOAN_PROCESS;

/


GRANT EXECUTE ON SC_CREDIT.PA_TMP_LOAN_PROCESS TO USRNCPCREDIT1
/
GRANT EXECUTE ON SC_CREDIT.PA_TMP_LOAN_PROCESS TO USRCREDIT02
/
GRANT EXECUTE ON SC_CREDIT.PA_TMP_LOAN_PROCESS TO USRNCPCREDIT1
/
GRANT EXECUTE ON SC_CREDIT.PA_TMP_LOAN_PROCESS TO USRCREDIT02
/
