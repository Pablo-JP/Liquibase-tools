CREATE OR REPLACE  FUNCTION SC_CREDIT.FN_SEL_LOAN_INTEREST_JSON (
   PA_LOAN_ID                IN SC_CREDIT.TA_LOAN_BALANCE.FI_LOAN_ID%TYPE
   ,PA_ADMIN_CENTER_ID       IN SC_CREDIT.TA_LOAN_BALANCE.FI_ADMIN_CENTER_ID%TYPE
   ,PA_UUID_TRACKING         IN SC_CREDIT.TA_LOAN.FC_UUID_TRACKING%TYPE)
RETURN CLOB IS
   /* **************************************************************
   * PROJECT: LOAN LIFE CIRCLE
   * DESCRIPTION: SELECT INTEREST AND CONVERT TO JSON
   * CREATED DATE: 02/01/2025
   * CREATOR: IVAN LOPEZ
   ************************************************************** */
   CSL_0                     CONSTANT SIMPLE_INTEGER := 0;
   CSL_1                     CONSTANT SIMPLE_INTEGER := 1;
   CSL_2                     CONSTANT SIMPLE_INTEGER := 2;
   CSL_FN                    CONSTANT SIMPLE_INTEGER := 1;
   VL_JSON                   CLOB := NULL;
   CSL_PAYMENT               CONSTANT VARCHAR2(8)   := 'PAYMENT';
   CSL_DUE_DATE              CONSTANT VARCHAR2(9)   := 'DUE DATE';

BEGIN

   SELECT JSON_ARRAYAGG(
             JSON_OBJECT(
                KEY 'loanId' VALUE FI_LOAN_ID,
                KEY 'adminCenterId' VALUE FI_ADMIN_CENTER_ID,
                KEY 'paymentNumberId' VALUE FI_PAYMENT_NUMBER_ID,
                KEY 'daysAcumByTerm' VALUE FI_DAYS_ACUM_BY_TERM,
                KEY 'interestBalanceDay' VALUE INTEREST_BALANCE_DAY,
                KEY 'interestDayLoan' VALUE INTEREST_DAY_LOAN ,
                KEY 'statusLoan' VALUE STATUS_LOAN ,
                KEY 'orden' VALUE ORDEN
             )
          ) AS JSON_ARRAY
   INTO
      VL_JSON
   FROM (SELECT B.FI_LOAN_ID AS FI_LOAN_ID,
                B.FI_ADMIN_CENTER_ID AS FI_ADMIN_CENTER_ID,
                NVL(A.FI_PAYMENT_NUMBER_ID,CSL_0) AS  FI_PAYMENT_NUMBER_ID,
                NVL(A.FI_DAYS_ACUM_BY_TERM,CSL_0) AS FI_DAYS_ACUM_BY_TERM,
                CASE WHEN FC_CONDITION_INTEREST IN (CSL_PAYMENT,CSL_DUE_DATE) THEN CSL_0
                   ELSE NVL(TRUNC(A.FN_ACCRUED_INTEREST_BALANCE,CSL_2),CSL_0)
                END AS INTEREST_BALANCE_DAY,
                NVL(TRUNC(A.FN_ACCRUED_INTEREST_LOAN - a.FN_PAYMENT_INTEREST,CSL_2),CSL_0) AS INTEREST_DAY_LOAN,
                NVL(B.FI_LOAN_STATUS_ID,CSL_0) AS STATUS_LOAN,
                NVL(ROW_NUMBER() OVER (PARTITION BY A.FI_LOAN_ID
                   ORDER BY A.FI_PAYMENT_NUMBER_ID DESC,A.FI_DAYS_ACUM_BY_TERM DESC),CSL_0) AS ORDEN
         FROM SC_CREDIT.TA_LOAN B
            LEFT OUTER JOIN SC_CREDIT.TA_LOAN_INTEREST A
                         ON B.FI_LOAN_ID =A.FI_LOAN_ID
                        AND B.FI_ADMIN_CENTER_ID = A.FI_ADMIN_CENTER_ID
         WHERE B.FI_LOAN_ID = PA_LOAN_ID
           AND B.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
         FETCH NEXT 1 ROW ONLY
   );

   RETURN VL_JSON;

EXCEPTION
   WHEN NO_DATA_FOUND THEN
      SC_CREDIT.SP_ERROR_LOG(
         UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_FN)
         ,SQLCODE
         ,SQLERRM
         ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
         ,PA_UUID_TRACKING
         ,NULL
         );
      RETURN NULL;
   WHEN OTHERS THEN
      SC_CREDIT.SP_ERROR_LOG(
         UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_FN)
         ,SQLCODE
         ,SQLERRM
         ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
         ,PA_UUID_TRACKING
         ,NULL
         );
      RETURN NULL;
END FN_SEL_LOAN_INTEREST_JSON;

/

GRANT EXECUTE ON SC_CREDIT.FN_SEL_LOAN_INTEREST_JSON TO USRNCPCREDIT1
/
