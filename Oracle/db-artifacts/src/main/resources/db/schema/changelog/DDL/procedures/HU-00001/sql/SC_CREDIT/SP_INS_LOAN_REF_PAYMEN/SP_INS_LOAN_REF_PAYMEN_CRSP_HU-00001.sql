CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_INS_LOAN_REF_PAYMEN (
    PA_LOAN_ID               IN SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT.FI_LOAN_ID%TYPE,
    PA_ADMIN_CENTER_ID       IN SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT.FI_ADMIN_CENTER_ID%TYPE,
    PA_OPERATION_REF_ID      IN SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT.FI_OPERATION_REF_ID%TYPE,
    PA_REFERENCE_ID          IN SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT.FC_REFERENCE_ID%TYPE,
    PA_USER                  IN SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT.FC_USER%TYPE,
    PA_IP_ADDRESS            IN SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT.FC_IP_ADDRESS%TYPE,
    PA_UUID_TRACKING         IN SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT.FC_UUID_TRACKING%TYPE,
    PA_STATUS_CODE           OUT NUMBER,
    PA_STATUS_MSG            OUT VARCHAR2
)
IS
 /* **********************************************************************
 * PROJECT: CORE LOAN
 * DESCRIPTION: DESCRIPTION: PROCEDURE TO SAVE INFORMATION FROM THE
                TA_LOAN_OPERATION_REF_PAYMENT TABLE WHEN IT HAS A REFERENCE.
 * PRECONDITIONS: PRE-EXISTING LOANS AND OPERATIONS
 * CREATED DATE: 07/01/2025
 * CREATOR: CESAR SANCHEZ HERNANDEZ
 * MODIFICATION: 2025-01-15 CESAR SANCHEZ HERNANDEZ
 * [NCPRDC-5152 V2.0.0]
 ***********************************************************************/
  CSL_0            CONSTANT SIMPLE_INTEGER := 0;
  CSL_1            CONSTANT SIMPLE_INTEGER := 1;
  CSL_204          CONSTANT SIMPLE_INTEGER := 204;
  CSL_409          CONSTANT SIMPLE_INTEGER := 409;
  CSL_ARROW        CONSTANT VARCHAR2(5) := '->';
  CSL_JSON         CONSTANT VARCHAR2(5) := NULL;
  CSL_SUCCESS      CONSTANT VARCHAR2(8) := 'SUCCESS';
  CSL_NO_INSERTION CONSTANT VARCHAR2(55) := 'NO DATA INSERTED';
  CSL_DUPLICATE    CONSTANT VARCHAR2(50) := 'RECORD ALREADY EXISTS';
  CSL_SP           CONSTANT SIMPLE_INTEGER := 1;
  VL_EXISTE        NUMBER := 0;

BEGIN
SELECT COUNT(1)
INTO VL_EXISTE
FROM SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT
WHERE FI_OPERATION_REF_ID = PA_OPERATION_REF_ID
  AND FC_REFERENCE_ID = PA_REFERENCE_ID;

IF VL_EXISTE > 0 THEN
        PA_STATUS_CODE := CSL_409;
        PA_STATUS_MSG := CSL_DUPLICATE;
ROLLBACK;
RETURN;
END IF;

INSERT INTO SC_CREDIT.TA_LOAN_OPERATION_REF_PAYMENT(
    FI_LOAN_OPERATION_REF_PAYMENT_ID,
    FI_LOAN_ID,
    FI_ADMIN_CENTER_ID,
    FI_OPERATION_REF_ID,
    FC_REFERENCE_ID,
    FC_USER,
    FC_IP_ADDRESS,
    FD_CREATED_DATE,
    FD_MODIFICATION_DATE,
    FC_UUID_TRACKING)
VALUES(
          SC_CREDIT.SE_LOAN_OPERATION_REF_PAYMENT_ID.NEXTVAL,
          PA_LOAN_ID,
          PA_ADMIN_CENTER_ID,
          PA_OPERATION_REF_ID,
          PA_REFERENCE_ID,
          PA_USER,
          PA_IP_ADDRESS,
          SYSDATE,
          SYSDATE,
          PA_UUID_TRACKING);


COMMIT;
PA_STATUS_CODE := CSL_0;
        PA_STATUS_MSG  := CSL_SUCCESS;


EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    PA_STATUS_CODE := CSL_204;
    PA_STATUS_MSG := CSL_NO_INSERTION;
    PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG := SQLERRM || CSL_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
    SC_CREDIT.SP_ERROR_LOG(
       UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_SP)
       ,SQLCODE
       ,SQLERRM
       ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
       ,PA_UUID_TRACKING
       ,CSL_JSON
       );

END SP_INS_LOAN_REF_PAYMEN;

/

GRANT EXECUTE ON SC_CREDIT.SP_INS_LOAN_REF_PAYMEN TO USRNCPCREDIT1
/
