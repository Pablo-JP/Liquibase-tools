CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SEL_LOAN_DATA (
    PA_LOAN_ID       IN  NUMBER,
    PA_UUID_TRACKING IN  SC_CREDIT.TA_LOAN.FC_UUID_TRACKING%TYPE,
    PA_JSON_OBJECT   OUT CLOB,
    PA_STATUS_CODE   OUT NUMBER,
    PA_STATUS_MSG    OUT VARCHAR2
)
AS
 /* **************************************************************
 * PROJECT: CORE LOAN
 * DESCRIPTION: PROCEDURE FOR QUERYING LOANS DATA
 * PRECONDITIONS: PRE-EXISTING LOANS
 * CREATED DATE: 23/10/2024
 * CREATOR: GILBERTO CHAVEZ MUNOZ
 *****************************************************************/

  CSL_0             CONSTANT SIMPLE_INTEGER := 0;
  CSL_1             CONSTANT SIMPLE_INTEGER := 1;
  CSL_SP            CONSTANT SIMPLE_INTEGER := 1;
  CSL_ARROW         CONSTANT VARCHAR2(5) := '->';
  CSL_JSON          CONSTANT VARCHAR2(5) := NULL;
  CSL_SUCCESS       CONSTANT VARCHAR2(8) := 'SUCCESS';

  VG_OPERATION_TYPE CLOB;
  VG_LOAN_CONCEPT   CLOB;
  VG_PAY_SCHEDULE   CLOB;
  VG_PAY_SCH_STATUS CLOB;

  TYPE REC_VALUE IS RECORD
     (
        fi_operation_type_id   SC_CREDIT.TC_OPERATION_TYPE.FI_OPERATION_TYPE_ID%TYPE,
        fc_operation_type_desc SC_CREDIT.TC_OPERATION_TYPE.FC_OPERATION_TYPE_DESC%TYPE
     );

  TYPE REC_LOAN_CONCEPT IS RECORD
     (
        FI_LOAN_CONCEPT_ID      SC_CREDIT.TC_LOAN_CONCEPT.FI_LOAN_CONCEPT_ID%TYPE,
        FC_LOAN_CONCEPT_DESC    SC_CREDIT.TC_LOAN_CONCEPT.FC_LOAN_CONCEPT_DESC%TYPE,
        FI_LOAN_CONCEP_TYPE_ID  SC_CREDIT.TC_LOAN_CONCEPT.FI_LOAN_CONCEPT_TYPE_ID%TYPE
     );

  TYPE REC_PAY_SCHEDULE IS RECORD
     (
       FI_PAYMENT_NUMBER_ID SC_CREDIT.TA_PAYMENT_SCHEDULE.FI_PAYMENT_NUMBER_ID%TYPE
     );

  TYPE REC_PAY_SCHEDULE_STATUS IS RECORD
     (
       FI_PMT_SCHEDULE_STATUS_DESC SC_CREDIT.TC_PAYMENT_SCHEDULE_STATUS.FI_PMT_SCHEDULE_STATUS_DESC%TYPE,
       FI_PMT_SCHEDULE_STATUS_ID   SC_CREDIT.TC_PAYMENT_SCHEDULE_STATUS.FI_PMT_SCHEDULE_STATUS_ID%TYPE
     );

  TYPE TAB_VALUE IS TABLE OF REC_VALUE;
  VL_TABVALUE_LOD TAB_VALUE;

  TYPE TAB_LOAN_CONCEPT IS TABLE OF REC_LOAN_CONCEPT;
  VL_TAB_LOAN_CONCEPT TAB_LOAN_CONCEPT;

  TYPE TAB_PAY_SCHEDULE IS TABLE OF REC_PAY_SCHEDULE;
  VL_TAB_PAY_SCHEDULE TAB_PAY_SCHEDULE;

  TYPE TAB_PAY_SCHEDULE_STATUS IS TABLE OF REC_PAY_SCHEDULE_STATUS;
  VL_TAB_PAY_SCHEDULE_STATUS TAB_PAY_SCHEDULE_STATUS;

  VG_JO_OPERATION_TYPE      JSON_OBJECT_T := JSON_OBJECT_T();
  VG_JA_OPERATION_TYPE      JSON_ARRAY_T  := JSON_ARRAY_T();
  VG_JO_LOAN_CONCEPT        JSON_OBJECT_T := JSON_OBJECT_T();
  VG_JA_LOAN_CONCEPT        JSON_ARRAY_T  := JSON_ARRAY_T();
  VG_JA_PAY_SCHEDULE        JSON_ARRAY_T  := JSON_ARRAY_T();
  VG_JO_PAY_SCHEDULE_STATUS JSON_OBJECT_T := JSON_OBJECT_T();

BEGIN
  SELECT fi_operation_type_id, fc_operation_type_desc
  BULK COLLECT INTO VL_TABVALUE_LOD
  FROM   SC_CREDIT.tc_operation_type
  WHERE  fi_status = 1;

  VG_JO_OPERATION_TYPE := JSON_OBJECT_T();

  FOR i IN 1.. VL_TABVALUE_LOD.COUNT LOOP
      VG_JO_OPERATION_TYPE.put(VL_TABVALUE_LOD(i).FC_OPERATION_TYPE_DESC, VL_TABVALUE_LOD(i).FI_OPERATION_TYPE_ID);
  END LOOP;

  VG_JA_OPERATION_TYPE := JSON_ARRAY_T();
  VG_JA_OPERATION_TYPE.append(VG_JO_OPERATION_TYPE);

  VG_OPERATION_TYPE := VG_JO_OPERATION_TYPE.to_string;

  SELECT FI_LOAN_CONCEPT_ID, FC_LOAN_CONCEPT_DESC, FI_LOAN_CONCEPT_TYPE_ID
  BULK COLLECT INTO VL_TAB_LOAN_CONCEPT
  FROM   SC_CREDIT.TC_LOAN_CONCEPT
  WHERE  FI_STATUS = 1;

  VG_JO_LOAN_CONCEPT := JSON_OBJECT_T();

  FOR i IN 1..VL_TAB_LOAN_CONCEPT.COUNT LOOP
       VG_JO_LOAN_CONCEPT.put(VL_TAB_LOAN_CONCEPT(i).FC_LOAN_CONCEPT_DESC, VL_TAB_LOAN_CONCEPT(i).FI_LOAN_CONCEPT_ID);
  END LOOP;
  VG_JA_LOAN_CONCEPT := JSON_ARRAY_T();
  VG_JA_LOAN_CONCEPT.append( VG_JO_LOAN_CONCEPT );

  VG_LOAN_CONCEPT := VG_JO_LOAN_CONCEPT.to_string;

  SELECT FI_PMT_SCHEDULE_STATUS_DESC, FI_PMT_SCHEDULE_STATUS_ID
  BULK COLLECT INTO VL_TAB_PAY_SCHEDULE_STATUS
  FROM   SC_CREDIT.TC_PAYMENT_SCHEDULE_STATUS
  WHERE  FI_STATUS = 1;

  VG_JO_PAY_SCHEDULE_STATUS := JSON_OBJECT_T();

  FOR i IN 1..VL_TAB_PAY_SCHEDULE_STATUS.COUNT LOOP
       VG_JO_PAY_SCHEDULE_STATUS.put(VL_TAB_PAY_SCHEDULE_STATUS(i).FI_PMT_SCHEDULE_STATUS_DESC, VL_TAB_PAY_SCHEDULE_STATUS(i).FI_PMT_SCHEDULE_STATUS_ID);
  END LOOP;

  VG_PAY_SCH_STATUS := VG_JO_PAY_SCHEDULE_STATUS.to_string;

  SELECT FI_PAYMENT_NUMBER_ID
  BULK COLLECT INTO VL_TAB_PAY_SCHEDULE
  FROM   SC_CREDIT.TA_PAYMENT_SCHEDULE
  WHERE  FI_LOAN_ID = PA_LOAN_ID
  AND    FI_PMT_SCHEDULE_STATUS_ID = 1
  ORDER BY FI_PAYMENT_NUMBER_ID;

  VG_JA_PAY_SCHEDULE := JSON_ARRAY_T();

  FOR i IN 1..VL_TAB_PAY_SCHEDULE.COUNT LOOP
       VG_JA_PAY_SCHEDULE.append(VL_TAB_PAY_SCHEDULE(i).FI_PAYMENT_NUMBER_ID);
  END LOOP;

  VG_PAY_SCHEDULE := VG_JA_PAY_SCHEDULE.to_string;

  SELECT json_object('TA_LOAN' VALUE json_object('PAYMENT_AMOUNT'            VALUE LN.FN_PRINCIPAL_AMOUNT,
                                                 'FINANCE_CHARGE_AMOUNT'     VALUE LN.FN_FINANCE_CHARGE_AMOUNT,
                                                 'PRINCIPAL_BALANCE'         VALUE LN.FN_PRINCIPAL_BALANCE,
                                                 'FINANCE_CHARGE_BALANCE'    VALUE LN.FN_FINANCE_CHARGE_BALANCE,
                                                 'ADDITIONAL_CHARGE_BALANCE' VALUE LN.FN_ADDITIONAL_CHARGE_BALANCE,
                                                 'TRANSACTION'               VALUE LN.FI_TRANSACTION,
                                                                                             'STATUS'                    VALUE LN.FI_LOAN_STATUS_ID
                                                ),
/*                     'TA_PAYMENT_TYPE_DETAIL' VALUE json_object('PAYMENT_TYPE_ID' VALUE PTD.FI_PAYMENT_TYPE_ID,
                                                                                                        'PAYMENT_AMOUNT'  VALUE PTD.FN_PAYMENT_AMOUNT
                                                               ),*/
                                                              'OPERATION_TYPE'          VALUE VG_OPERATION_TYPE FORMAT JSON,
                                                              'LOAN_CONCEPT'            VALUE VG_LOAN_CONCEPT   FORMAT JSON,
                                                              'PAYMENT_SCHEDULE'        VALUE VG_PAY_SCHEDULE   FORMAT JSON,
                                                              'PAYMENT_SCHEDULE_STATUS' VALUE VG_PAY_SCH_STATUS FORMAT JSON
                    )
  INTO   PA_JSON_OBJECT
  FROM   SC_CREDIT.TA_LOAN LN
  WHERE  LN.FI_LOAN_ID = PA_LOAN_ID
  ;

  PA_STATUS_CODE := CSL_0;
  PA_STATUS_MSG := CSL_SUCCESS;
EXCEPTION
  WHEN OTHERS THEN
    PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG := SQLERRM || CSL_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
    SC_CREDIT.SP_ERROR_LOG(
       UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_SP)
       ,SQLCODE
       ,SQLERRM
       ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
       ,PA_UUID_TRACKING
       ,CSL_JSON
       );
END SP_SEL_LOAN_DATA;

/

GRANT EXECUTE ON SC_CREDIT.SP_SEL_LOAN_DATA TO USRNCPCREDIT1
/
