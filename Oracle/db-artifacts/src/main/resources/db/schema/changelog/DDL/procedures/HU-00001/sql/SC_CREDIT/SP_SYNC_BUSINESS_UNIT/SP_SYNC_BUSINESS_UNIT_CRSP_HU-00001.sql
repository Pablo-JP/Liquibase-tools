CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SYNC_BUSINESS_UNIT (
    PA_SYNC_JSON   			  CLOB
    ,PA_UPDATED_ROWS	OUT NUMBER
    ,PA_STATUS_CODE		OUT NUMBER
    ,PA_STATUS_MSG  	OUT VARCHAR2)
  AS
/* **************************************************************
* PROJECT: NCP
* DESCRIPTION: CATALOG SYNCHONIZATION TC_BUSINESS_UNIT
* CREATED DATE: 2025/01/09
* CREATOR: CESAR CORTES
* MODIFICATION DATE: 2025/01/09
************************************************************** */
  CSL_0 CONSTANT SIMPLE_INTEGER := 0;
BEGIN
  PA_STATUS_CODE := CSL_0;
  PA_STATUS_MSG := 'OK';
  PA_UPDATED_ROWS  := CSL_0;

  MERGE INTO SC_CREDIT.TC_BUSINESS_UNIT A
    USING (
    SELECT
      *
    FROM
      JSON_TABLE ( PA_SYNC_JSON, '$.businessUnit[*]'
        COLUMNS (
          ID                    NUMBER PATH '$.id'
          ,COMPANY              NUMBER PATH '$.company'
          ,COUNTRY        		NUMBER PATH '$.country'
          ,DESCRIPTION          VARCHAR2 ( 50 ) PATH '$.description'
          ,STATUS               NUMBER PATH '$.status'
          ,USER_NAME            VARCHAR2 ( 50 ) PATH '$.user'
          ,CREATED_DATE         TIMESTAMP PATH '$.createdDate'
          ,MODIFICATION_DATE    TIMESTAMP PATH '$.modificationDate')))
          B ON ( A.FI_BUSINESS_UNIT_ID = B.ID AND A.FI_COMPANY_ID = B.COMPANY AND A.FI_COUNTRY_ID = B.COUNTRY )
  WHEN MATCHED THEN UPDATE
    SET
      A.FC_BUSINESS_DESC = B.DESCRIPTION
      ,A.FI_STATUS = B.STATUS
      ,A.FC_USER = B.USER_NAME
      ,A.FD_CREATED_DATE = B.CREATED_DATE
      ,A.FD_MODIFICATION_DATE = CAST(B.MODIFICATION_DATE AS DATE)
  WHEN NOT MATCHED THEN
    INSERT (
      FI_COUNTRY_ID
      ,FI_COMPANY_ID
      ,FI_BUSINESS_UNIT_ID
      ,FC_BUSINESS_DESC
      ,FI_STATUS
      ,FC_USER
      ,FD_CREATED_DATE
      ,FD_MODIFICATION_DATE)
    VALUES (
      B.COUNTRY
      ,B.COMPANY
      ,B.ID
      ,B.DESCRIPTION
      ,B.STATUS
      ,B.USER_NAME
      ,B.CREATED_DATE
      ,B.MODIFICATION_DATE);

      PA_UPDATED_ROWS := SQL%ROWCOUNT;

  COMMIT;

  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      PA_STATUS_CODE := SQLCODE;
      PA_STATUS_MSG  := SQLERRM;
      SC_CREDIT.SP_ERROR_LOG('SP_SYNC_BUSINESS_UNIT', SQLCODE, SQLERRM,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, NULL, '');

  END SP_SYNC_BUSINESS_UNIT;

/

GRANT EXECUTE ON SC_CREDIT.SP_SYNC_BUSINESS_UNIT TO USRPURPOSEWS
/
GRANT EXECUTE ON SC_CREDIT.SP_SYNC_BUSINESS_UNIT TO USRNCPCREDIT1
/
