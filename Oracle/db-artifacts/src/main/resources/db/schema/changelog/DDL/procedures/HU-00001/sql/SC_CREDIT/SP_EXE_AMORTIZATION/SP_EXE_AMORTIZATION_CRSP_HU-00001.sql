CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_EXE_AMORTIZATION (
    PA_LOAN_ID          IN SC_CREDIT.TA_PAYMENT_SCHEDULE.FI_LOAN_ID%TYPE,
    PA_CUR_PAYMENT      OUT SYS_REFCURSOR,
    PA_CUR_PAYMENT_FEE  OUT SYS_REFCURSOR,
    PA_STATUS_CODE      OUT NUMBER,
    PA_STATUS_MSG       OUT VARCHAR2)
  AS
  --CONSTANTS
    CSG_1                          CONSTANT SIMPLE_INTEGER := 1;
    CSG_0                          CONSTANT SIMPLE_INTEGER := 0;
    CSG_X                          CONSTANT VARCHAR(1) := 'X';
    CSG_ARROW                      CONSTANT VARCHAR2(5) := ' -> ';
    CSG_SUCCESS_CODE               CONSTANT SIMPLE_INTEGER := 0;
    CSG_SUCCESS_MSG                CONSTANT VARCHAR2(10) := 'SUCCESS';
    CSG_NOT_DATA_FOUND             CONSTANT SIMPLE_INTEGER := -20204;
    CSG_NOT_DATA_FOUND_MSG         CONSTANT VARCHAR2(80) := 'NO DATA FOUND';
    CSL_EXE_AMORTIZACION_RECALC    CONSTANT VARCHAR2(50) := 'SC_CREDIT.SP_EXE_AMORTIZATION_RECALC';
    CSG_FORMAT_DATE                CONSTANT VARCHAR2(50) := 'YYYY-MM-DDTHH24:MI:SSTZH:TZM';
/*************************************************************
* PROJECT:              NCP-OUTSTANDING BALANCE
* DESCRIPTION:          STORED PROCEDURE TO SELECT AMORTIZATION
* CREATOR:              JOSE DE JESUS BRAVO AGUILAR/RICARDO HAZAEL GOMEZ ALVAREZ.
* CREATED DATE:         SEP-05-2024
* MODIFICATION DATE:    JAN-22-2025
* [NCPACS-4804 V1]
*************************************************************/
  -- VARIABLES
    VL_VAL_LOAN_ID SC_CREDIT.TA_PAYMENT_SCHEDULE.FI_LOAN_ID%TYPE;
  -- EXCEPTION
    EXC_NO_DATA_FOUND         EXCEPTION;
    PRAGMA EXCEPTION_INIT (EXC_NO_DATA_FOUND, CSG_NOT_DATA_FOUND);

  BEGIN

    SELECT COUNT(*)
      INTO VL_VAL_LOAN_ID
      FROM SC_CREDIT.TA_LOAN
      WHERE FI_LOAN_ID = PA_LOAN_ID;

    IF VL_VAL_LOAN_ID = CSG_0 THEN
    RAISE EXC_NO_DATA_FOUND;
    END IF;

    PA_STATUS_CODE := CSG_SUCCESS_CODE;
    PA_STATUS_MSG := CSG_SUCCESS_MSG;

    OPEN PA_CUR_PAYMENT FOR
    SELECT DISTINCT
        PS.FI_PAYMENT_NUMBER_ID
        ,PS.FN_PAYMENT_AMOUNT
        ,TO_CHAR(CAST(PS.FD_DUE_DATE AS TIMESTAMP WITH TIME ZONE),CSG_FORMAT_DATE) AS FD_DUE_DATE
        ,PS.FI_PERIOD_DAYS
        ,PS.FN_INTEREST_AMOUNT
        ,PS.FN_PRINCIPAL_PAYMENT_AMOUNT
        ,PS.FN_OUTSTANDING_BALANCE
        ,PS.FI_PMT_SCHEDULE_STATUS_ID
    FROM
        SC_CREDIT.TA_PAYMENT_SCHEDULE PS
    WHERE
        PS.FI_LOAN_ID = PA_LOAN_ID
    ORDER BY FI_PAYMENT_NUMBER_ID ASC;

    OPEN PA_CUR_PAYMENT_FEE FOR
    SELECT DISTINCT
        PSF.FI_PAYMENT_SCHEDULE_ID
        ,PSF.FI_FEE_SEQ
        ,PSF.FI_LOAN_CONCEPT_ID
        ,LC.FC_LOAN_CONCEPT_DESC
        ,PSF.FN_FEE_AMOUNT
        ,PSF.FN_FEE_PAYMENT_BALANCE
    FROM
        SC_CREDIT.TA_PAYMENT_SCHEDULE_FEE PSF
    LEFT OUTER JOIN
        SC_CREDIT.TC_LOAN_CONCEPT LC
    ON
        PSF.FI_LOAN_CONCEPT_ID = LC.FI_LOAN_CONCEPT_ID
    WHERE
        PSF.FI_LOAN_ID = PA_LOAN_ID
    ORDER BY FI_PAYMENT_SCHEDULE_ID ASC;

  EXCEPTION
    WHEN EXC_NO_DATA_FOUND THEN
      PA_STATUS_CODE := CSG_NOT_DATA_FOUND;
      PA_STATUS_MSG := CSG_NOT_DATA_FOUND_MSG;
      SC_CREDIT.SP_ERROR_LOG(CSL_EXE_AMORTIZACION_RECALC, SQLCODE, SQLERRM,
        DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, CSG_X, CSG_X);
    WHEN OTHERS THEN
      PA_STATUS_CODE := SQLCODE;
      PA_STATUS_MSG := SQLERRM || CSG_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
      SC_CREDIT.SP_ERROR_LOG(CSL_EXE_AMORTIZACION_RECALC, SQLCODE, SQLERRM,
        DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, CSG_X, CSG_X);
  END SP_EXE_AMORTIZATION;

/

GRANT EXECUTE ON SC_CREDIT.SP_EXE_AMORTIZATION TO USRPURPOSEWS
/
GRANT EXECUTE ON SC_CREDIT.SP_EXE_AMORTIZATION TO USRNCPCREDIT1
/
