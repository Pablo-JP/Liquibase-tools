CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_LOAN_LAST_DETAIL (
    PA_LOAN_ID  NUMBER,
    PA_LOAN OUT CLOB,
    PA_DESCRIPTION OUT VARCHAR2,
    PA_CODE OUT NUMBER
)
IS
    VG_LOAN_BALANCE_ID NUMBER;


     TYPE REC_BALANCE IS RECORD
     (
        FI_LOAN_BALANCE_ID              SC_CREDIT.TA_LOAN_BALANCE.FI_LOAN_BALANCE_ID%TYPE,
        FI_LOAN_OPERATION_ID            SC_CREDIT.TA_LOAN_BALANCE.FI_LOAN_OPERATION_ID%TYPE,
        FN_PRINCIPAL_BALANCE            SC_CREDIT.TA_LOAN_BALANCE.FN_PRINCIPAL_BALANCE%TYPE,
        FN_FINANCE_CHARGE_BALANCE       SC_CREDIT.TA_LOAN_BALANCE.FN_FINANCE_CHARGE_BALANCE%TYPE,
        FN_ADDITIONAL_CHARGE_BALANCE    SC_CREDIT.TA_LOAN_BALANCE.FN_ADDITIONAL_CHARGE_BALANCE%TYPE
     );

     TYPE TAB_VALUE_BALANCE IS TABLE OF REC_BALANCE;
     VL_TABVALUE_BALANCE TAB_VALUE_BALANCE;

     TYPE REC_DETAIL IS RECORD
     (
        FI_LOAN_CONCEPT_ID SC_CREDIT.TA_LOAN_BALANCE_DETAIL.FI_LOAN_CONCEPT_ID%TYPE,
        FN_ITEM_AMOUNT SC_CREDIT.TA_LOAN_BALANCE_DETAIL.FN_ITEM_AMOUNT%TYPE
     );

     TYPE TAB_VALUE_DETAIL IS TABLE OF REC_DETAIL;
     VL_TABVALUE_DETAIL TAB_VALUE_DETAIL;

     VG_JO_BALANCE_TYPE JSON_OBJECT_T := JSON_OBJECT_T();
     VG_JA_BALANCE_TYPE      JSON_ARRAY_T  := JSON_ARRAY_T();
     VG_BALANCE_TYPE CLOB;

     VG_JO_DETAIL_TYPE JSON_OBJECT_T := JSON_OBJECT_T();
     VG_JA_DETAIL_TYPE      JSON_ARRAY_T  := JSON_ARRAY_T();
     VG_DETAIL_TYPE CLOB;

BEGIN
    PA_CODE:=0;
    VG_LOAN_BALANCE_ID:=0;


    SELECT MAX(FI_LOAN_BALANCE_ID) INTO VG_LOAN_BALANCE_ID FROM SC_CREDIT.TA_LOAN_BALANCE WHERE FI_LOAN_ID=PA_LOAN_ID;

    SELECT FI_LOAN_CONCEPT_ID,FN_ITEM_AMOUNT
    BULK COLLECT INTO VL_TABVALUE_DETAIL
    FROM SC_CREDIT.TA_LOAN_BALANCE_DETAIL
    WHERE FI_LOAN_BALANCE_ID=VG_LOAN_BALANCE_ID
    ORDER BY FD_CREATED_DATE;

    VG_JO_DETAIL_TYPE := JSON_OBJECT_T();
    VG_JA_DETAIL_TYPE := JSON_ARRAY_T();

     FOR i IN 1.. VL_TABVALUE_DETAIL.COUNT LOOP

           VG_JO_DETAIL_TYPE.put('conceptId',VL_TABVALUE_DETAIL(i).FI_LOAN_CONCEPT_ID );
           VG_JO_DETAIL_TYPE.put('itemAmount',VL_TABVALUE_DETAIL(i).FN_ITEM_AMOUNT );

           VG_JA_DETAIL_TYPE.append(VG_JO_DETAIL_TYPE);

    END LOOP;

    VG_DETAIL_TYPE := VG_JA_DETAIL_TYPE.to_string;

    SELECT FI_LOAN_BALANCE_ID, FI_LOAN_OPERATION_ID, FN_PRINCIPAL_BALANCE, FN_FINANCE_CHARGE_BALANCE, FN_ADDITIONAL_CHARGE_BALANCE
    BULK COLLECT INTO VL_TABVALUE_BALANCE
    FROM SC_CREDIT.TA_LOAN_BALANCE
    WHERE FI_LOAN_BALANCE_ID=VG_LOAN_BALANCE_ID;

    VG_JO_BALANCE_TYPE := JSON_OBJECT_T();
    VG_JA_BALANCE_TYPE := JSON_ARRAY_T();

    FOR i IN 1.. VL_TABVALUE_BALANCE.COUNT LOOP

           VG_JO_BALANCE_TYPE.put('id',VL_TABVALUE_BALANCE(i).FI_LOAN_BALANCE_ID );
           VG_JO_BALANCE_TYPE.put('loanOperationId',VL_TABVALUE_BALANCE(i).FI_LOAN_OPERATION_ID );
           VG_JO_BALANCE_TYPE.put('principalBalance',VL_TABVALUE_BALANCE(i).FN_PRINCIPAL_BALANCE );
           VG_JO_BALANCE_TYPE.put('financeChargeBalance',VL_TABVALUE_BALANCE(i).FN_FINANCE_CHARGE_BALANCE );
           VG_JO_BALANCE_TYPE.put('additionalChargeBalance',VL_TABVALUE_BALANCE(i).FN_ADDITIONAL_CHARGE_BALANCE );
           VG_JO_BALANCE_TYPE.put('TA_BALANCE_DETAIL',VG_JA_DETAIL_TYPE);


           VG_JA_BALANCE_TYPE.append(VG_JO_BALANCE_TYPE);

    END LOOP;

    VG_BALANCE_TYPE := VG_JA_BALANCE_TYPE.to_string;



    SELECT json_object('TA_LOAN' VALUE json_object('customerId'            VALUE LN.FC_CUSTOMER_ID,
                                                 'originationCenterId'     VALUE LN.FI_ORIGINATION_CENTER_ID,
                                                 'adminCenterId'           VALUE LN.FI_ADMIN_CENTER_ID,
                                                 'status'                  VALUE LN.FI_LOAN_STATUS_ID,
                                                 'additionalStatus'        VALUE LN.FI_ADDITIONAL_STATUS,
                                                 'statusDate'              VALUE TO_CHAR(LN.FD_LOAN_STATUS_DATE,'YYYY-MM-DD'),
                                                 'principalBalance'        VALUE LN.FN_PRINCIPAL_BALANCE,
                                                 'financeChargeBalance'    VALUE LN.FN_FINANCE_CHARGE_BALANCE,
                                                                                             'additionalChargeBalance' VALUE LN.FN_ADDITIONAL_CHARGE_BALANCE,
                                                 'TA_BALANCE'          VALUE VG_BALANCE_TYPE FORMAT JSON
                                                )
    )
    INTO   PA_LOAN
    FROM   SC_CREDIT.TA_LOAN LN
    WHERE  FI_LOAN_ID= PA_LOAN_ID;


    EXCEPTION
      WHEN OTHERS THEN
        PA_CODE := 500;
        PA_DESCRIPTION:='ERROR:'||SQLCODE||':'||SQLERRM||'';
        SC_CREDIT.SP_ERROR_LOG(UTL_CALL_STACK.SUBPROGRAM(1)(1)
                                    ,SQLCODE
                                    ,SQLERRM
                                    ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
                                    ,PA_LOAN_ID
                                    ,NULL);



END SP_LOAN_LAST_DETAIL;

/

GRANT EXECUTE ON SC_CREDIT.SP_LOAN_LAST_DETAIL TO USRNCPCREDIT1
/
