CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_LOAN_DATA_LAST_DETAIL (
    PA_LOAN_ID	SC_CREDIT.TA_LOAN.FI_LOAN_ID%TYPE,
    PA_ADMIN_CENTER_ID	SC_CREDIT.TA_LOAN.FI_ADMIN_CENTER_ID%TYPE,
    PA_LOAN OUT CLOB,
    PA_STATUS_MSG OUT VARCHAR2,
    PA_STATUS_CODE OUT NUMBER
)
IS
   /* **************************************************************
   * PROYECT: CORE LOAN
   * DESCRIPTION: Obtain the last payment and its details
   * CREATED DATE: 06/12/2024
   * CREATOR: VICTOR DANIEL GUTIERREZ RODRIGUEZ
   * MODIFIED DATE: 06/12/2024
   ************************************************************** */

    CSL_0              CONSTANT SIMPLE_INTEGER := 0;
    CSL_1              CONSTANT SIMPLE_INTEGER := 1;
    CSL_2              CONSTANT SIMPLE_INTEGER := 2;
    CSL_7              CONSTANT SIMPLE_INTEGER := 7;
    CSL_8              CONSTANT SIMPLE_INTEGER := 8;
    CSL_204            CONSTANT SIMPLE_INTEGER := 204;
    CSL_422            CONSTANT SIMPLE_INTEGER := 422;
    CSL_ARROW          CONSTANT VARCHAR2(2)  := '->';
    CSL_DATE           CONSTANT VARCHAR2(10) := 'MM/DD/YYYY';
    CSL_MSG_SUCCESS    CONSTANT VARCHAR2(7)  := 'SUCCESS';
    CSL_MSG_NO_CONTENT CONSTANT VARCHAR2(10) := 'NO CONTENT';
    CSL_MSG_NO_LOAN    CONSTANT VARCHAR2(40) := 'LOAN IN WAITING, SOLD OR CLOSED STATUS';

    VG_LOAN_BALANCE_ID    NUMBER;
    VG_ADMIN_CENTER_COUNT NUMBER;
    VG_STATUS             NUMBER;

     TYPE REC_BALANCE IS RECORD
     (
        FI_LOAN_BALANCE_ID              SC_CREDIT.TA_LOAN_BALANCE.FI_LOAN_BALANCE_ID%TYPE,
        FI_LOAN_OPERATION_ID            SC_CREDIT.TA_LOAN_BALANCE.FI_LOAN_OPERATION_ID%TYPE,
        FN_PRINCIPAL_BALANCE            SC_CREDIT.TA_LOAN_BALANCE.FN_PRINCIPAL_BALANCE%TYPE,
        FN_FINANCE_CHARGE_BALANCE       SC_CREDIT.TA_LOAN_BALANCE.FN_FINANCE_CHARGE_BALANCE%TYPE,
        FN_ADDITIONAL_CHARGE_BALANCE    SC_CREDIT.TA_LOAN_BALANCE.FN_ADDITIONAL_CHARGE_BALANCE%TYPE
     );

     TYPE TAB_VALUE_BALANCE IS TABLE OF REC_BALANCE;
     VL_TABVALUE_BALANCE TAB_VALUE_BALANCE;

     TYPE REC_DETAIL IS RECORD
     (
        FI_LOAN_CONCEPT_ID SC_CREDIT.TA_LOAN_BALANCE_DETAIL.FI_LOAN_CONCEPT_ID%TYPE,
        FN_ITEM_AMOUNT SC_CREDIT.TA_LOAN_BALANCE_DETAIL.FN_ITEM_AMOUNT%TYPE
     );

     TYPE TAB_VALUE_DETAIL IS TABLE OF REC_DETAIL;
     VL_TABVALUE_DETAIL TAB_VALUE_DETAIL;

     VG_JO_BALANCE_TYPE JSON_OBJECT_T := JSON_OBJECT_T();
     VG_JA_BALANCE_TYPE      JSON_ARRAY_T  := JSON_ARRAY_T();
     VG_BALANCE_TYPE CLOB;

     VG_JO_DETAIL_TYPE JSON_OBJECT_T := JSON_OBJECT_T();
     VG_JA_DETAIL_TYPE      JSON_ARRAY_T  := JSON_ARRAY_T();
     VG_DETAIL_TYPE CLOB;

     VG_OPERATION_TYPE CLOB;
     VG_LOAN_CONCEPT   CLOB;
     VG_PAY_SCHEDULE   CLOB;
     VG_PAY_SCH_STATUS CLOB;
     VG_BLANCE_DETAIL CLOB;

     VG_JO_OPERATION_TYPE      JSON_OBJECT_T := JSON_OBJECT_T();
     VG_JA_OPERATION_TYPE      JSON_ARRAY_T  := JSON_ARRAY_T();
     VG_JO_LOAN_CONCEPT        JSON_OBJECT_T := JSON_OBJECT_T();
     VG_JA_LOAN_CONCEPT        JSON_ARRAY_T  := JSON_ARRAY_T();
     VG_JO_PAY_SCHEDULE        JSON_OBJECT_T := JSON_OBJECT_T();
     VG_JA_PAY_SCHEDULE        JSON_ARRAY_T := JSON_ARRAY_T();
     VG_JO_PAY_SCHEDULE_STATUS JSON_OBJECT_T := JSON_OBJECT_T();

    TYPE REC_VALUE IS RECORD
     (
        fi_operation_type_id   SC_CREDIT.TC_OPERATION_TYPE.FI_OPERATION_TYPE_ID%TYPE,
        fc_operation_type_desc SC_CREDIT.TC_OPERATION_TYPE.FC_OPERATION_TYPE_DESC%TYPE
     );
    TYPE TAB_VALUE IS TABLE OF REC_VALUE;
    VL_TABVALUE_LOD TAB_VALUE;


    TYPE REC_LOAN_CONCEPT IS RECORD
     (
        FI_LOAN_CONCEPT_ID      SC_CREDIT.TC_LOAN_CONCEPT.FI_LOAN_CONCEPT_ID%TYPE,
        FC_LOAN_CONCEPT_DESC    SC_CREDIT.TC_LOAN_CONCEPT.FC_LOAN_CONCEPT_DESC%TYPE,
        FI_LOAN_CONCEP_TYPE_ID  SC_CREDIT.TC_LOAN_CONCEPT.FI_LOAN_CONCEPT_TYPE_ID%TYPE
     );
    TYPE TAB_LOAN_CONCEPT IS TABLE OF REC_LOAN_CONCEPT;
    VL_TAB_LOAN_CONCEPT TAB_LOAN_CONCEPT;


    TYPE REC_PAY_SCHEDULE IS RECORD
     (
       FI_PAYMENT_NUMBER_ID SC_CREDIT.TA_PAYMENT_SCHEDULE.FI_PAYMENT_NUMBER_ID%TYPE,
       FN_PAYMENT_BALANCE   SC_CREDIT.TA_PAYMENT_SCHEDULE.FN_PAYMENT_BALANCE%TYPE
     );
    TYPE TAB_PAY_SCHEDULE IS TABLE OF REC_PAY_SCHEDULE;
    VL_TAB_PAY_SCHEDULE TAB_PAY_SCHEDULE;

    TYPE REC_PAY_SCHEDULE_STATUS IS RECORD
     (
       FI_PMT_SCHEDULE_STATUS_DESC SC_CREDIT.TC_PAYMENT_SCHEDULE_STATUS.FI_PMT_SCHEDULE_STATUS_DESC%TYPE,
       FI_PMT_SCHEDULE_STATUS_ID   SC_CREDIT.TC_PAYMENT_SCHEDULE_STATUS.FI_PMT_SCHEDULE_STATUS_ID%TYPE
     );
    TYPE TAB_PAY_SCHEDULE_STATUS IS TABLE OF REC_PAY_SCHEDULE_STATUS;
    VL_TAB_PAY_SCHEDULE_STATUS TAB_PAY_SCHEDULE_STATUS;

BEGIN
    PA_STATUS_CODE:=0;
    VG_LOAN_BALANCE_ID:=0;
    VG_ADMIN_CENTER_COUNT:=0;

SELECT COUNT(FI_ADMIN_CENTER_ID) INTO VG_ADMIN_CENTER_COUNT FROM SC_CREDIT.TA_LOAN WHERE FI_LOAN_ID= PA_LOAN_ID AND FI_ADMIN_CENTER_ID=PA_ADMIN_CENTER_ID ;
BEGIN
SELECT FI_LOAN_STATUS_ID INTO VG_STATUS FROM SC_CREDIT.TA_LOAN WHERE FI_LOAN_ID= PA_LOAN_ID AND FI_ADMIN_CENTER_ID=PA_ADMIN_CENTER_ID ;
EXCEPTION
            WHEN OTHERS THEN
                VG_STATUS:=0;
END;

        IF VG_ADMIN_CENTER_COUNT > CSL_0 AND VG_STATUS >  CSL_1 AND VG_STATUS <  CSL_7 THEN

SELECT MAX(FI_LOAN_BALANCE_ID) INTO VG_LOAN_BALANCE_ID FROM SC_CREDIT.TA_LOAN_BALANCE WHERE FI_LOAN_ID=PA_LOAN_ID AND FI_ADMIN_CENTER_ID=PA_ADMIN_CENTER_ID;
IF VG_LOAN_BALANCE_ID > 0 THEN

SELECT FI_LOAN_CONCEPT_ID,FN_ITEM_AMOUNT
    BULK COLLECT INTO VL_TABVALUE_DETAIL
FROM SC_CREDIT.TA_LOAN_BALANCE_DETAIL
WHERE FI_LOAN_BALANCE_ID=VG_LOAN_BALANCE_ID AND FI_ADMIN_CENTER_ID=PA_ADMIN_CENTER_ID
ORDER BY FD_CREATED_DATE;

VG_JO_DETAIL_TYPE := JSON_OBJECT_T();
                VG_JA_DETAIL_TYPE := JSON_ARRAY_T();

FOR i IN 1.. VL_TABVALUE_DETAIL.COUNT LOOP

                       VG_JO_DETAIL_TYPE.put('conceptId',VL_TABVALUE_DETAIL(i).FI_LOAN_CONCEPT_ID );
                       VG_JO_DETAIL_TYPE.put('itemAmount',VL_TABVALUE_DETAIL(i).FN_ITEM_AMOUNT );

                       VG_JA_DETAIL_TYPE.append(VG_JO_DETAIL_TYPE);

END LOOP;

SELECT FI_LOAN_BALANCE_ID, FI_LOAN_OPERATION_ID, FN_PRINCIPAL_BALANCE, FN_FINANCE_CHARGE_BALANCE, FN_ADDITIONAL_CHARGE_BALANCE
    BULK COLLECT INTO VL_TABVALUE_BALANCE
FROM SC_CREDIT.TA_LOAN_BALANCE
WHERE FI_LOAN_BALANCE_ID=VG_LOAN_BALANCE_ID AND FI_ADMIN_CENTER_ID=PA_ADMIN_CENTER_ID;

VG_JO_BALANCE_TYPE := JSON_OBJECT_T();
                VG_JA_BALANCE_TYPE := JSON_ARRAY_T();

FOR i IN 1.. VL_TABVALUE_BALANCE.COUNT LOOP

                       VG_JO_BALANCE_TYPE.put('id',VL_TABVALUE_BALANCE(i).FI_LOAN_BALANCE_ID );
                       VG_JO_BALANCE_TYPE.put('loanOperationId',VL_TABVALUE_BALANCE(i).FI_LOAN_OPERATION_ID );
                       VG_JO_BALANCE_TYPE.put('principalBalance',VL_TABVALUE_BALANCE(i).FN_PRINCIPAL_BALANCE );
                       VG_JO_BALANCE_TYPE.put('financeChargeBalance',VL_TABVALUE_BALANCE(i).FN_FINANCE_CHARGE_BALANCE );
                       VG_JO_BALANCE_TYPE.put('additionalChargeBalance',VL_TABVALUE_BALANCE(i).FN_ADDITIONAL_CHARGE_BALANCE );
                       VG_JO_BALANCE_TYPE.put('TA_BALANCE_DETAIL',VG_JA_DETAIL_TYPE);
END LOOP;

                VG_JA_BALANCE_TYPE.append(VG_JO_BALANCE_TYPE);
                VG_BLANCE_DETAIL:=VG_JO_BALANCE_TYPE.to_string;

SELECT fi_operation_type_id, fc_operation_type_desc
    BULK COLLECT INTO VL_TABVALUE_LOD
FROM   SC_CREDIT.tc_operation_type
WHERE  fi_status = 1;
VG_JO_OPERATION_TYPE := JSON_OBJECT_T();
FOR i IN 1.. VL_TABVALUE_LOD.COUNT LOOP
                      VG_JO_OPERATION_TYPE.put(VL_TABVALUE_LOD(i).FC_OPERATION_TYPE_DESC, VL_TABVALUE_LOD(i).FI_OPERATION_TYPE_ID);
END LOOP;
                VG_JA_OPERATION_TYPE := JSON_ARRAY_T();
                VG_JA_OPERATION_TYPE.append(VG_JO_OPERATION_TYPE);
                VG_OPERATION_TYPE := VG_JO_OPERATION_TYPE.to_string;

SELECT FI_LOAN_CONCEPT_ID, FC_LOAN_CONCEPT_DESC, FI_LOAN_CONCEPT_TYPE_ID
    BULK COLLECT INTO VL_TAB_LOAN_CONCEPT
FROM   SC_CREDIT.TC_LOAN_CONCEPT
WHERE  FI_STATUS = 1;
VG_JO_LOAN_CONCEPT := JSON_OBJECT_T();
FOR i IN 1..VL_TAB_LOAN_CONCEPT.COUNT LOOP
                       VG_JO_LOAN_CONCEPT.put(VL_TAB_LOAN_CONCEPT(i).FC_LOAN_CONCEPT_DESC, VL_TAB_LOAN_CONCEPT(i).FI_LOAN_CONCEPT_ID);
END LOOP;
                VG_JA_LOAN_CONCEPT := JSON_ARRAY_T();
                VG_JA_LOAN_CONCEPT.append( VG_JO_LOAN_CONCEPT );
                VG_LOAN_CONCEPT := VG_JO_LOAN_CONCEPT.to_string;

SELECT FI_PAYMENT_NUMBER_ID, FN_PAYMENT_BALANCE
    BULK COLLECT INTO VL_TAB_PAY_SCHEDULE
FROM   SC_CREDIT.TA_PAYMENT_SCHEDULE
WHERE  FI_LOAN_ID = PA_LOAN_ID
  AND    FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
  AND    FI_PMT_SCHEDULE_STATUS_ID = CSL_1
UNION
SELECT FI_PAYMENT_NUMBER_ID, FN_PAYMENT_BALANCE
FROM   SC_CREDIT.TA_PAYMENT_SCHEDULE
WHERE  FI_LOAN_ID = PA_LOAN_ID
  AND    FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
  AND    FI_PMT_SCHEDULE_STATUS_ID = CSL_2
  AND    FI_PAYMENT_NUMBER_ID = (SELECT MAX(PS2.FI_PAYMENT_NUMBER_ID)
                                 FROM   SC_CREDIT.TA_PAYMENT_SCHEDULE PS2
                                 WHERE  PS2.FI_LOAN_ID = PA_LOAN_ID
                                   AND    PS2.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
                                   AND    PS2.FI_PMT_SCHEDULE_STATUS_ID = CSL_2)
ORDER BY FI_PAYMENT_NUMBER_ID;

VG_JO_PAY_SCHEDULE := JSON_OBJECT_T();

FOR i IN 1..VL_TAB_PAY_SCHEDULE.COUNT LOOP
                   VG_JO_PAY_SCHEDULE.put(
                       TO_CHAR(VL_TAB_PAY_SCHEDULE(i).FI_PAYMENT_NUMBER_ID),
                       TO_NUMBER(VL_TAB_PAY_SCHEDULE(i).FN_PAYMENT_BALANCE)
                   );
END LOOP;

                VG_PAY_SCHEDULE := VG_JO_PAY_SCHEDULE.to_string;

SELECT FI_PMT_SCHEDULE_STATUS_DESC, FI_PMT_SCHEDULE_STATUS_ID
    BULK COLLECT INTO VL_TAB_PAY_SCHEDULE_STATUS
FROM   SC_CREDIT.TC_PAYMENT_SCHEDULE_STATUS
WHERE  FI_STATUS = 1;
VG_JO_PAY_SCHEDULE_STATUS := JSON_OBJECT_T();
FOR i IN 1..VL_TAB_PAY_SCHEDULE_STATUS.COUNT LOOP
                   VG_JO_PAY_SCHEDULE_STATUS.put(VL_TAB_PAY_SCHEDULE_STATUS(i).FI_PMT_SCHEDULE_STATUS_DESC, VL_TAB_PAY_SCHEDULE_STATUS(i).FI_PMT_SCHEDULE_STATUS_ID);
END LOOP;
                VG_PAY_SCH_STATUS := VG_JO_PAY_SCHEDULE_STATUS.to_string;

SELECT json_object('TA_LOAN' VALUE json_object(
                                                                'PAYMENT_AMOUNT'                VALUE LN.FN_PRINCIPAL_AMOUNT,
                                                                'FINANCE_CHARGE_AMOUNT'         VALUE LN.FN_FINANCE_CHARGE_AMOUNT,
                                                                'PRINCIPAL_BALANCE'             VALUE LN.FN_PRINCIPAL_BALANCE,
                                                                'FINANCE_CHARGE_BALANCE'        VALUE LN.FN_FINANCE_CHARGE_BALANCE,
                                                                'ADDITIONAL_CHARGE_BALANCE'     VALUE LN.FN_ADDITIONAL_CHARGE_BALANCE,
                                                                'TRANSACTION'                   VALUE LN.FI_TRANSACTION,
                                                                'STATUS'                        VALUE LN.FI_LOAN_STATUS_ID,
                                                                'CUSTOMER_ID'                   VALUE LN.FC_CUSTOMER_ID,
                                                                'ORIGINATION_CENTER_ID'         VALUE LN.FI_ORIGINATION_CENTER_ID,
                                                                'ADMIN_CENTER_ID'               VALUE LN.FI_ADMIN_CENTER_ID,
                                                                'ADDITIONAL_STATUS'             VALUE LN.FI_ADDITIONAL_STATUS,
                                                                'STATUS_UPDATE'                 VALUE TO_CHAR(LN.FD_LOAN_STATUS_DATE,'YYYY-MM-DD')
                                                                ),
                   'OPERATION_TYPE'                VALUE VG_OPERATION_TYPE FORMAT JSON,
                   'LOAN_CONCEPT'                  VALUE VG_LOAN_CONCEPT   FORMAT JSON,
                   'PAYMENT_SCHEDULE'              VALUE VG_PAY_SCHEDULE   FORMAT JSON,
                   'PAYMENT_SCHEDULE_STATUS'       VALUE VG_PAY_SCH_STATUS FORMAT JSON,
                   'TA_BALANCE'                    VALUE VG_BLANCE_DETAIL FORMAT JSON
       )
INTO   PA_LOAN
FROM   SC_CREDIT.TA_LOAN LN
WHERE  FI_LOAN_ID= PA_LOAN_ID AND FI_ADMIN_CENTER_ID=PA_ADMIN_CENTER_ID  ;

PA_STATUS_CODE := CSL_0;
                    PA_STATUS_MSG:=CSL_MSG_SUCCESS;
ELSE
                    PA_STATUS_CODE := CSL_204;
                    PA_STATUS_MSG:=CSL_MSG_NO_CONTENT;
END IF;
       ELSIF VG_STATUS = CSL_1 OR VG_STATUS = CSL_7 OR VG_STATUS = CSL_8 THEN
             PA_STATUS_CODE := CSL_422;
            PA_STATUS_MSG:=CSL_MSG_NO_LOAN;
ELSE
            PA_STATUS_CODE := CSL_204;
            PA_STATUS_MSG:=CSL_MSG_NO_CONTENT;
END IF;
EXCEPTION
      WHEN OTHERS THEN
        PA_STATUS_CODE := SQLCODE;
        PA_STATUS_MSG:= SQLERRM || CSL_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        SC_CREDIT.SP_ERROR_LOG(UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_1)
                                    ,SQLCODE
                                    ,SQLERRM
                                    ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
                                    ,PA_LOAN_ID
                                    ,NULL);

END SP_LOAN_DATA_LAST_DETAIL;

/

GRANT EXECUTE ON SC_CREDIT.SP_LOAN_DATA_LAST_DETAIL TO USRNCPCREDIT1
/
