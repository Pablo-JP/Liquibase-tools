CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_TMP_BTC_SEL_LATE_FEE 
    (PA_FIRST_CENTER_ID        IN SC_CREDIT.TA_LOAN.FI_ADMIN_CENTER_ID%TYPE
    ,PA_END_CENTER_ID          IN SC_CREDIT.TA_LOAN.FI_ADMIN_CENTER_ID%TYPE
    ,PA_OPERATION_DATE         IN VARCHAR2
    ,PA_PROCESS                IN SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_PROCESS%TYPE
    ,PA_TRACK                  IN SC_CREDIT.TA_TMP_LOAN_PROCESS.FI_TRACK%TYPE
    ,PA_STATUS_CODE            OUT NUMBER
    ,PA_STATUS_MSG             OUT VARCHAR2
    ,PA_CUR_FEES               OUT SC_CREDIT.PA_TYPES.TYP_CURSOR)
IS
    /* **************************************************************
    * PROJECT: LOAN LIFE CYCLE
    * DESCRIPTION: SELECT LOAN TO APPLY LATE FEE TMP
    * CREATED DATE: 26/12/2024
    * CREATOR: LUIS RAMIREZ
    ************************************************************** */
    CSL_DATE         CONSTANT VARCHAR2(22)   := 'MM/DD/YYYY HH24:MI:SS';
    CSL_0            CONSTANT SIMPLE_INTEGER := 0;
    CSL_1            CONSTANT SIMPLE_INTEGER := 1;
    CSL_3            CONSTANT SIMPLE_INTEGER := 3;
    CSL_MSG_SUCCESS  CONSTANT VARCHAR2(7)   := 'SUCCESS';
    CSL_SP           CONSTANT SIMPLE_INTEGER := 2;
    CSL_ARROW        CONSTANT VARCHAR2(2)    := '->';
    CSL_COMMA        CONSTANT VARCHAR2(3) := ' , ';
BEGIN
    PA_STATUS_CODE := CSL_0;
    PA_STATUS_MSG  := CSL_MSG_SUCCESS;
    PA_CUR_FEES :=  NULL;

    OPEN PA_CUR_FEES FOR
      WITH TAB_PED AS (
         SELECT TL.FI_LOAN_ID                         AS FI_LOAN_ID
               ,TL.FI_ADMIN_CENTER_ID                 AS FI_ADMIN_CENTER_ID
               ,TL.FC_CUSTOMER_ID                     AS FC_CUSTOMER_ID
               ,TL.FI_COUNTRY_ID                      AS FI_COUNTRY_ID
               ,TL.FI_COMPANY_ID                      AS FI_COMPANY_ID
               ,TL.FI_BUSINESS_UNIT_ID                AS FI_BUSINESS_UNIT_ID
               ,TL.FN_PRINCIPAL_BALANCE               AS FN_PRINCIPAL_BALANCE
               ,TL.FN_ADDITIONAL_CHARGE_BALANCE       AS FN_ADDITIONAL_CHARGE_BALANCE
               ,TL.FN_FINANCE_CHARGE_BALANCE          AS FN_FINANCE_CHARGE_BALANCE
               ,TL.FI_PRODUCT_ID                      AS FI_PRODUCT_ID
               ,TL.FI_RULE_ID                         AS FI_RULE_ID
               ,TL.FI_CURRENT_BALANCE_SEQ             AS FI_CURRENT_BALANCE_SEQ
               ,TL.FI_LOAN_STATUS_ID                  AS FI_LOAN_STATUS_ID
               ,TLSD.FI_REGISTRATION_NUMBER           AS FI_REGISTRATION_NUMBER
               ,TLSD.FI_COUNTER_DAY                   AS FI_COUNTER_DAY
               ,TLSD.FI_PAYMENT_NUMBER_ID             AS FI_PAYMENT_NUMBER_ID
               ,TLSD.FI_ACTION_DETAIL_ID              AS FI_ACTION_DETAIL_ID
               ,SC_CREDIT.FN_SEL_LOAN_BALANCE_DET_JSON
                  (TL.FI_LOAN_ID
                  , TL.FI_ADMIN_CENTER_ID
                  , TL.FI_CURRENT_BALANCE_SEQ
                  , NULL)            AS BALANCE_DET_JSON
               ,(SELECT PS.FN_PAYMENT_BALANCE
                FROM SC_CREDIT.TA_PAYMENT_SCHEDULE PS
                WHERE PS.FI_PAYMENT_SCHEDULE_ID > CSL_0
                  AND PS.FI_LOAN_ID = TL.FI_LOAN_ID
                  AND PS.FI_ADMIN_CENTER_ID = TL.FI_ADMIN_CENTER_ID
                  AND PS.FI_PAYMENT_NUMBER_ID = TLSD.FI_PAYMENT_NUMBER_ID
                  AND PS.FI_STATUS = CSL_1)              AS FN_PAYMENT_BALANCE
               ,(SELECT COUNT(0) AS FLAG_LATE_FEE
                FROM SC_CREDIT.TA_LOAN_STATUS_DETAIL SDFEE
                WHERE SDFEE.FI_LOAN_ID = TLSD.FI_LOAN_ID
                  AND SDFEE.FI_ADMIN_CENTER_ID = TLSD.FI_ADMIN_CENTER_ID
                  AND SDFEE.FI_PAYMENT_NUMBER_ID = TLSD.FI_PAYMENT_NUMBER_ID
                  AND SDFEE.FI_ON_OFF = CSL_0
                  AND SDFEE.FI_ACTION_DETAIL_ID = CSL_1) AS FLAG_LATE_FEE
               ,TO_CHAR(TLSD.FD_INITIAL_DATE,CSL_DATE) AS FD_INITIAL_DATE
         FROM SC_CREDIT.TA_TMP_LOAN_PROCESS L
            INNER JOIN SC_CREDIT.TA_LOAN TL
                    ON TL.FI_ADMIN_CENTER_ID = L.FI_ADMIN_CENTER_ID
                   AND TL.FI_LOAN_ID = L.FI_LOAN_ID
                   AND TL.FI_LOAN_STATUS_ID = CSL_3
            INNER JOIN SC_CREDIT.TA_LOAN_STATUS_DETAIL TLSD
                    ON TLSD.FI_LOAN_ID = TL.FI_LOAN_ID
                    AND TLSD.FI_ADMIN_CENTER_ID = TL.FI_ADMIN_CENTER_ID
                    AND TLSD.FI_PAYMENT_NUMBER_ID > CSL_0
                    AND TLSD.FI_ON_OFF = CSL_1
                    AND TLSD.FI_ACTION_DETAIL_ID = CSL_3
         WHERE L.FI_PROCESS = PA_PROCESS
           AND L.FI_TRACK = PA_TRACK )
      SELECT FI_LOAN_ID
            ,FI_ADMIN_CENTER_ID
            ,FC_CUSTOMER_ID
            ,FI_COUNTRY_ID
            ,FI_COMPANY_ID
            ,FI_BUSINESS_UNIT_ID
            ,FN_PRINCIPAL_BALANCE
            ,FN_ADDITIONAL_CHARGE_BALANCE
            ,FN_FINANCE_CHARGE_BALANCE
            ,FI_PRODUCT_ID
            ,FI_RULE_ID
            ,FI_CURRENT_BALANCE_SEQ
            ,FI_LOAN_STATUS_ID
            ,FI_REGISTRATION_NUMBER
            ,FI_COUNTER_DAY
            ,FI_PAYMENT_NUMBER_ID
            ,FI_ACTION_DETAIL_ID
            ,BALANCE_DET_JSON
            ,FN_PAYMENT_BALANCE
            ,FD_INITIAL_DATE
      FROM TAB_PED
      WHERE FLAG_LATE_FEE = CSL_0;
EXCEPTION
WHEN OTHERS THEN
    PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG := SQLERRM || CSL_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;

    SC_CREDIT.SP_BATCH_ERROR_LOG (
       UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_SP)
       ,SQLCODE
       ,SQLERRM
       ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
       ,CSL_0
       ,PA_FIRST_CENTER_ID || CSL_COMMA || PA_END_CENTER_ID || CSL_COMMA || PA_OPERATION_DATE
       );
END SP_TMP_BTC_SEL_LATE_FEE;

/

GRANT EXECUTE ON SC_CREDIT.SP_TMP_BTC_SEL_LATE_FEE TO USRNCPCREDIT1
/
GRANT EXECUTE ON SC_CREDIT.SP_TMP_BTC_SEL_LATE_FEE TO USRBTCCREDIT1
/
GRANT EXECUTE ON SC_CREDIT.SP_TMP_BTC_SEL_LATE_FEE TO USRCREDIT02
/
