CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SYNC_LOAN_CONCEPT (
    PA_SYNC_JSON   		CLOB,
    PA_UPDATED_ROWS	OUT NUMBER,
    PA_STATUS_CODE	OUT NUMBER,
    PA_STATUS_MSG	OUT VARCHAR2
  ) IS
  /*************************************************************
	* PROJECT : NCP-LOAN DESIGNER PARAMETRIA
	* DESCRIPTION: PACKAGE ASYNC CATALOGS
	* CREATOR: TALLER DE PRODUCTOS
	* CREATED DATE: 2024-11-16
	* MODIFICATION: 2025-01-21
	* [NCPTPR-10763 V1] FOR ADDED COLUM CATALOG
************************************************************** */
  CSL_0 CONSTANT SIMPLE_INTEGER := 0;
BEGIN
  PA_STATUS_CODE := CSL_0;
  PA_STATUS_MSG := 'OK';
  PA_UPDATED_ROWS  := CSL_0;

  MERGE INTO SC_CREDIT.TC_LOAN_CONCEPT A
  USING (
    SELECT
      *
    FROM
      JSON_TABLE ( PA_SYNC_JSON, '$.loanConcept[*]'
        COLUMNS (
          ID NUMBER PATH '$.id',
          description VARCHAR2 ( 50 ) PATH '$.description',
          conceptType NUMBER PATH '$.conceptType',
          FC_KEY VARCHAR2 ( 50 ) PATH '$.key',
          STATUS NUMBER PATH '$.status',
          USER_NAME VARCHAR2 ( 50 ) PATH '$.user',
          CREATED_DATE TIMESTAMP PATH '$.createdDate',
          MODIFICATION_DATE TIMESTAMP PATH '$.modificationDate',
          BALANCECATEGORY NUMBER PATH '$.balanceCategory'
        )
      )
  ) B ON ( A.FI_LOAN_CONCEPT_ID = B.ID )
  WHEN MATCHED THEN UPDATE
  SET A.FC_LOAN_CONCEPT_DESC = B.description,
	  A.FI_LOAN_CONCEPT_TYPE_ID =B.conceptType,
	  A.FC_KEY=B.FC_KEY,
      A.FI_STATUS = B.STATUS,
      A.FC_USER = B.USER_NAME,
      A.FD_MODIFICATION_DATE = CAST(B.MODIFICATION_DATE AS DATE),
      A.FI_BALANCE_CATEGORY_ID = B.BALANCECATEGORY
  WHEN NOT MATCHED THEN
  INSERT (
    FI_LOAN_CONCEPT_ID,
    FC_LOAN_CONCEPT_DESC,
    FI_LOAN_CONCEPT_TYPE_ID,
    FC_KEY,
    FI_STATUS,
    FC_USER,
    FD_CREATED_DATE,
    FD_MODIFICATION_DATE,
    FI_BALANCE_CATEGORY_ID)
  VALUES
    ( B.ID,
      B.description,
      B.conceptType,
      B.FC_KEY,
      B.STATUS,
      B.USER_NAME,
      B.CREATED_DATE,
      B.MODIFICATION_DATE,
      B.BALANCECATEGORY);

      PA_UPDATED_ROWS := SQL%ROWCOUNT;

   COMMIT;

  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG  := SQLERRM;
      SC_CREDIT.SP_ERROR_LOG('PA_ACCRUED_TYPE->SP_SYNC_LOAN_CONCEPT', SQLCODE, SQLERRM, DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, NULL,'');


END SP_SYNC_LOAN_CONCEPT;

/

GRANT EXECUTE ON SC_CREDIT.SP_SYNC_LOAN_CONCEPT TO USRPURPOSEWS
/
GRANT EXECUTE ON SC_CREDIT.SP_SYNC_LOAN_CONCEPT TO USRNCPCREDIT1
/
