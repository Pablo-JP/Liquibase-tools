CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SEL_LAST_TENDER_TYP_PAYMENT (
    PA_LOAN_ID         IN  SC_CREDIT.TA_LOAN.FI_LOAN_ID%TYPE,
    PA_ADMIN_CENTER_ID IN  SC_CREDIT.TA_LOAN.FI_ADMIN_CENTER_ID%TYPE,
    PA_TENDER_TYPE_ID  IN  SC_CREDIT.TC_TENDER_TYPE.FI_TENDER_TYPE_ID%TYPE,
    PA_JSON_OBJECT     OUT CLOB,
    PA_STATUS_CODE     OUT NUMBER,
    PA_STATUS_MSG      OUT VARCHAR2
)
IS
 /***************************************************************************
 * PROJECT: CORE LOAN
 * DESCRIPTION: PROCEDURE FOR GETTING LOAN_OPERATION_ID CORRESPONDING TO
 *              PAYMENT OF THE SPECIFIED TENDER, TO REVERSE SUCH PAYMENT.
 * PRECONDITIONS: PRE-EXISTING LOANS AND OPERATIONS
 * CREATED DATE: 03/12/2024
 * CREATOR: GILBERTO CHAVEZ MUNOZ
 ****************************************************************************/
  CSL_0                CONSTANT SIMPLE_INTEGER := 0;
  CSL_1                CONSTANT SIMPLE_INTEGER := 1;
  CSL_2                CONSTANT SIMPLE_INTEGER := 2;
  CSL_3                CONSTANT SIMPLE_INTEGER := 3;
  CSL_204              CONSTANT SIMPLE_INTEGER := 204;
  CSL_422              CONSTANT SIMPLE_INTEGER := 422;
  CSL_SP               CONSTANT SIMPLE_INTEGER := 1;
  CSL_PAYMENT          CONSTANT SIMPLE_INTEGER := 2;
  CSL_CASH             CONSTANT SIMPLE_INTEGER := 3;
  CSL_ARROW            CONSTANT VARCHAR2(5) := '->';
  CSL_JSON             CONSTANT VARCHAR2(5) := NULL;
  CSL_SUCCESS          CONSTANT VARCHAR2(8) := 'SUCCESS';
  CSL_BAD_ENTITY       CONSTANT VARCHAR2(22) := 'Unprocessable Entity';
  CSL_BAD_OPERATION    CONSTANT VARCHAR2(40) := 'Operation with more than one Tender';
  CSL_NO_DATA_FOUND    CONSTANT VARCHAR2(55) := 'NO DATA FOUND (IN OPERATION OR OPERATION_DETAIL)';
  CSL_MANY_TENDERS     CONSTANT VARCHAR2(55) := 'OPERATION WITH MORE THAN 1 TENDER';
  VL_LOAN_STATUS_ID    SC_CREDIT.TA_LOAN.FI_LOAN_STATUS_ID%TYPE;
  VL_OPERATION_ID      SC_CREDIT.TA_LOAN_OPERATION.FI_LOAN_OPERATION_ID%TYPE;
  VL_OP_TYPE_ID        SC_CREDIT.TA_LOAN_OPERATION.FI_OPERATION_TYPE_ID%TYPE;
  VL_OP_AMOUNT         SC_CREDIT.TA_LOAN_OPERATION.FN_OPERATION_AMOUNT%TYPE;
  VL_APLICATION_DATE   SC_CREDIT.TA_LOAN_OPERATION.FD_APPLICATION_DATE%TYPE;
  VL_MODIFICATION_DATE SC_CREDIT.TA_LOAN_OPERATION.FD_MODIFICATION_DATE%TYPE;
  VL_PAYMENT_ID        SC_CREDIT.TA_PAYMENT_SCHEDULE.FI_SCHEDULE_TYPE_ID%TYPE;
  VL_COUNT_TENDERS     NUMBER;
  VL_TOT_TENDERS       NUMBER;

  TYPE REC_OP_DET_VALUE IS RECORD
     (
        FI_LOAN_CONCEPT_ID   SC_CREDIT.TA_LOAN_OPERATION_DETAIL.FI_LOAN_CONCEPT_ID%TYPE,
        FC_LOAN_CONCEPT_DESC SC_CREDIT.TC_LOAN_CONCEPT.FC_LOAN_CONCEPT_DESC%TYPE,
        FN_ITEM_AMOUNT       SC_CREDIT.TA_LOAN_OPERATION_DETAIL.FN_ITEM_AMOUNT%TYPE
     );

  TYPE TAB_OP_DET_VALUE IS TABLE OF REC_OP_DET_VALUE;
  VL_TABVALUE_OD TAB_OP_DET_VALUE;

  VG_LOANS         CLOB;
  VG_JA_LOANS      JSON_ARRAY_T := JSON_ARRAY_T();
  VG_JO_OPERATIONS JSON_OBJECT_T := JSON_OBJECT_T();
  VG_JA_OPERATIONS JSON_ARRAY_T := JSON_ARRAY_T();
  VG_JO_OP_DETAILS JSON_OBJECT_T := JSON_OBJECT_T();
  VG_JA_OP_DETAILS JSON_ARRAY_T := JSON_ARRAY_T();
  VG_JO_LOAN_DATA  JSON_OBJECT_T := JSON_OBJECT_T();

BEGIN
  PA_STATUS_CODE := CSL_0;
  PA_STATUS_MSG  := CSL_SUCCESS;

SELECT COUNT(DISTINCT(LNOT.FI_TENDER_TYPE_ID))
INTO   VL_COUNT_TENDERS
FROM   SC_CREDIT.TA_LOAN LN Inner Join SC_CREDIT.TA_LOAN_OPERATION LNOP
                                       ON LN.FI_LOAN_ID = LNOP.FI_LOAN_ID AND LN.FI_ADMIN_CENTER_ID = LNOP.FI_ADMIN_CENTER_ID
                            INNER JOIN SC_CREDIT.TA_LOAN_OPERATION_TENDER LNOT
                                       ON LNOP.FI_LOAN_OPERATION_ID = LNOT.FI_LOAN_OPERATION_ID AND LNOP.FI_ADMIN_CENTER_ID = LNOT.FI_ADMIN_CENTER_ID
                                           AND LNOP.FI_LOAN_ID = LNOT.FI_LOAN_ID
WHERE  LN.FI_LOAN_ID = PA_LOAN_ID
  AND    LN.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
  AND    LNOP.FI_OPERATION_TYPE_ID = CSL_PAYMENT
  AND    LNOT.FI_TENDER_TYPE_ID = PA_TENDER_TYPE_ID
  And    LN.FI_LOAN_STATUS_ID = CSL_2
;

IF VL_COUNT_TENDERS > CSL_1 THEN
     PA_STATUS_CODE := CSL_422;
     PA_STATUS_MSG  := CSL_BAD_OPERATION;
ELSE
SELECT LN.FI_LOAN_STATUS_ID, MAX(LNOP.FI_LOAN_OPERATION_ID)
INTO   VL_LOAN_STATUS_ID, VL_OPERATION_ID
FROM   SC_CREDIT.TA_LOAN LN Inner Join SC_CREDIT.TA_LOAN_OPERATION LNOP
                                       ON LN.FI_LOAN_ID = LNOP.FI_LOAN_ID AND LN.FI_ADMIN_CENTER_ID = LNOP.FI_ADMIN_CENTER_ID
                            INNER JOIN SC_CREDIT.TA_LOAN_OPERATION_TENDER LNOT
                                       ON LNOP.FI_LOAN_OPERATION_ID = LNOT.FI_LOAN_OPERATION_ID AND LNOP.FI_ADMIN_CENTER_ID = LNOT.FI_ADMIN_CENTER_ID
                                           AND LNOP.FI_LOAN_ID = LNOT.FI_LOAN_ID
WHERE  LN.FI_LOAN_ID = PA_LOAN_ID
  AND    LN.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
  AND    LNOP.FI_OPERATION_TYPE_ID = CSL_PAYMENT
  AND    LNOT.FI_TENDER_TYPE_ID = PA_TENDER_TYPE_ID
  And    LN.FI_LOAN_STATUS_ID = CSL_2
  AND    LNOP.FI_LOAN_OPERATION_ID NOT IN( SELECT LOV.FI_OPERATION_REVERSED_ID
                                           FROM   SC_CREDIT.TA_LOAN_OPERATION_VOID LOV
                                           WHERE  LOV.FI_LOAN_ID = PA_LOAN_ID
                                             AND    LOV.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
                                             AND    LOV.FI_OPERATION_TYPE_ID = CSL_PAYMENT
)
GROUP BY LN.FI_LOAN_STATUS_ID
;

SELECT FI_PAYMENT_NUMBER_ID
INTO   VL_PAYMENT_ID
FROM   SC_CREDIT.TA_LOAN LN
           INNER  JOIN SC_CREDIT.TA_PAYMENT_SCHEDULE PS
                       ON LN.FI_LOAN_ID = PS.FI_LOAN_ID And LN.FI_ADMIN_CENTER_ID = PS.FI_ADMIN_CENTER_ID
WHERE  LN.FI_LOAN_ID = PA_LOAN_ID
  AND    LN.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
  AND    FI_PAYMENT_NUMBER_ID = (SELECT MAX(FI_PAYMENT_NUMBER_ID)
                                 FROM   SC_CREDIT.TA_PAYMENT_SCHEDULE TPS
                                 WHERE  TPS.FI_LOAN_ID = LN.FI_LOAN_ID
                                   AND    TPS.FI_ADMIN_CENTER_ID = LN.FI_ADMIN_CENTER_ID
                                   AND    TPS.FN_PAYMENT_BALANCE <> TPS.FN_PAYMENT_AMOUNT
)
;

SELECT LNOP.FI_OPERATION_TYPE_ID, LNOP.FN_OPERATION_AMOUNT, LNOP.FD_APPLICATION_DATE, LNOP.FD_MODIFICATION_DATE
INTO   VL_OP_TYPE_ID, VL_OP_AMOUNT, VL_APLICATION_DATE, VL_MODIFICATION_DATE
FROM   SC_CREDIT.TA_LOAN LN Inner Join SC_CREDIT.TA_LOAN_OPERATION LNOP
                                       ON LN.FI_LOAN_ID = LNOP.FI_LOAN_ID AND LN.FI_ADMIN_CENTER_ID = LNOP.FI_ADMIN_CENTER_ID
WHERE  LN.FI_LOAN_ID = PA_LOAN_ID
  AND    LN.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
  AND    LNOP.FI_OPERATION_TYPE_ID = CSL_PAYMENT
  AND    FI_LOAN_OPERATION_ID = VL_OPERATION_ID
;

SELECT OD.FI_LOAN_CONCEPT_ID, LC.FC_LOAN_CONCEPT_DESC, OD.FN_ITEM_AMOUNT
    BULK COLLECT INTO VL_TABVALUE_OD
FROM   SC_CREDIT.TA_LOAN_OPERATION_DETAIL OD
           INNER JOIN SC_CREDIT.TC_LOAN_CONCEPT LC
                      ON OD.FI_LOAN_CONCEPT_ID = LC.FI_LOAN_CONCEPT_ID
WHERE  FI_LOAN_OPERATION_ID = VL_OPERATION_ID
;

FOR i IN 1..VL_TABVALUE_OD.COUNT LOOP
        VG_JO_OP_DETAILS.put('conceptId', VL_TABVALUE_OD(i).FI_LOAN_CONCEPT_ID);
        VG_JO_OP_DETAILS.put('amount', VL_TABVALUE_OD(i).FN_ITEM_AMOUNT);
        VG_JA_OP_DETAILS.append(VG_JO_OP_DETAILS);
END LOOP;

    VG_JO_OPERATIONS.put('typeId', VL_OP_TYPE_ID);
    VG_JO_OPERATIONS.put('amount', VL_OP_AMOUNT);
    VG_JO_OPERATIONS.put('applicationDate', VL_APLICATION_DATE);
    VG_JO_OPERATIONS.put('date', SYSDATE);
    VG_JO_OPERATIONS.put('details', VG_JA_OP_DETAILS);
    VG_JA_OPERATIONS.append(VG_JO_OPERATIONS);

    VG_JO_LOAN_DATA.put('id', PA_LOAN_ID);
    VG_JO_LOAN_DATA.put('adminCenterId', PA_ADMIN_CENTER_ID);
    VG_JO_LOAN_DATA.put('operations', VG_JA_OPERATIONS);

    VG_JA_LOANS.append(VG_JO_LOAN_DATA);
    VG_LOANS := VG_JA_LOANS.to_string;

SELECT json_object(
               'updateBalancesRequestDto' VALUE
                 json_object('loans' VALUE VG_LOANS  FORMAT JSON
                            ),
               'statusId'   VALUE VL_LOAN_STATUS_ID,
               'lastUpdate' VALUE VL_MODIFICATION_DATE,
               'paymentID'  VALUE VL_PAYMENT_ID,
               'operationId' VALUE VL_OPERATION_ID
       )
INTO   PA_JSON_OBJECT
FROM DUAL;
END IF;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    PA_STATUS_CODE := CSL_204;
    PA_STATUS_MSG := CSL_NO_DATA_FOUND;
WHEN OTHERS THEN
    PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG := SQLERRM || CSL_ARROW || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
    SC_CREDIT.SP_ERROR_LOG(
       UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_SP)
       ,SQLCODE
       ,SQLERRM
       ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
       ,NULL
       ,CSL_JSON
       );
END SP_SEL_LAST_TENDER_TYP_PAYMENT;

/

GRANT EXECUTE ON SC_CREDIT.SP_SEL_LAST_TENDER_TYP_PAYMENT TO USRNCPCREDIT1
/
