CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SYNC_ACCRUED_TYPE (
    PA_SYNC_JSON  		  VARCHAR2,
    PA_UPDATED_ROWS	OUT NUMBER,
    PA_STATUS_CODE	OUT NUMBER,
    PA_STATUS_MSG   OUT VARCHAR2
  )
/* **************************************************************
* PROJECT: NCP
* DESCRIPTION: CATALOG SYNCHONIZATION TC_ACCRUED_TYPE
* CREATED DATE: 2025/01/09
* CREATOR: CESAR CORTES
* MODIFICATION DATE: 2025/01/09
************************************************************** */
IS
BEGIN
	PA_STATUS_CODE := 0;
  PA_STATUS_MSG  := 'OK';

  MERGE INTO SC_CREDIT.TC_ACCRUED_TYPE A
  USING (
    SELECT
      *
    FROM
      JSON_TABLE ( PA_SYNC_JSON, '$.accruedType[*]'
        COLUMNS (
          ID NUMBER PATH '$.id',
          DESCRIPTION VARCHAR2 ( 50 ) PATH '$.description',
          STATUS NUMBER PATH '$.status',
          USER_NAME VARCHAR2 ( 50 ) PATH '$.user',
          CREATED_DATE TIMESTAMP PATH '$.createdDate',
          MODIFICATION_DATE TIMESTAMP PATH '$.modificationDate'
        )
      )
  ) B ON ( A.FI_ACCRUED_TYPE_ID = B.ID )
  WHEN MATCHED THEN UPDATE
  SET A.FC_ACCRUED_TYPE_DESC = B.DESCRIPTION,
      A.FI_STATUS = B.STATUS,
      A.FC_USER = B.USER_NAME,
      A.FD_MODIFICATION_DATE = CAST(B.MODIFICATION_DATE AS DATE)
  WHEN NOT MATCHED THEN
  INSERT (
    FI_ACCRUED_TYPE_ID,
    FC_ACCRUED_TYPE_DESC,
    FI_STATUS,
    FC_USER,
    FD_CREATED_DATE,
    FD_MODIFICATION_DATE )
  VALUES
    ( B.ID,
      B.DESCRIPTION,
      B.STATUS,
      B.USER_NAME,
      B.CREATED_DATE,
      B.MODIFICATION_DATE );
      PA_UPDATED_ROWS := SQL%ROWCOUNT;

  COMMIT;

  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG  := SQLERRM;
      SC_CREDIT.SP_ERROR_LOG('SP_SYNC_ACCRUED_TYPE', SQLCODE, SQLERRM, DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, NULL, '');

END SP_SYNC_ACCRUED_TYPE;

/

GRANT EXECUTE ON SC_CREDIT.SP_SYNC_ACCRUED_TYPE TO USRPURPOSEWS
/
GRANT EXECUTE ON SC_CREDIT.SP_SYNC_ACCRUED_TYPE TO USRNCPCREDIT1
/
