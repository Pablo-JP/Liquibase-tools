CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SYNC_LOAN_STATUS_TRIGGER (
    PA_SYNC_JSON   		  CLOB,
    PA_UPDATED_ROWS	OUT NUMBER,
    PA_STATUS_CODE 	OUT NUMBER,
    PA_STATUS_MSG  	OUT VARCHAR2
  ) IS
/* **************************************************************
* PROJECT: NCP
* DESCRIPTION: CATALOG SYNCHONIZATION TC_LOAN_STATUS_TRIGGER
* CREATED DATE: 2025/01/09
* CREATOR: CESAR CORTES
* MODIFICATION DATE: 2025/01/09
************************************************************** */
  CSL_0 CONSTANT SIMPLE_INTEGER := 0;
BEGIN
  PA_STATUS_CODE := CSL_0;
  PA_STATUS_MSG := 'OK';
  PA_UPDATED_ROWS  := CSL_0;

  MERGE INTO SC_CREDIT.TC_LOAN_STATUS_TRIGGER A
  USING (
    SELECT
      *
    FROM
      JSON_TABLE ( PA_SYNC_JSON, '$.loanStatusTrigger[*]'
        COLUMNS (
          ID NUMBER PATH '$.id',
          TRIGGER_ID NUMBER PATH '$.trigger',
          TRIGGERS NUMBER PATH '$.triggers',
          isStayDay NUMBER PATH '$.isStayDay',
          stayDay NUMBER PATH '$.stayDay',
          nextStatus NUMBER PATH '$.nextStatus',
          STATUS NUMBER PATH '$.status',
          USER_NAME VARCHAR2 ( 50 ) PATH '$.user',
          CREATED_DATE TIMESTAMP PATH '$.createdDate',
          MODIFICATION_DATE TIMESTAMP PATH '$.modificationDate'
        )
      )
  ) B ON ( A.FI_LOAN_STATUS_ID = B.ID and a.FI_TRIGGER_ID = b.TRIGGER_ID AND a.FI_NEXT_STATUS = nextStatus )
  WHEN MATCHED THEN UPDATE
  SET A.FI_IS_TRIGGERS=B.TRIGGERS,
      A.FI_IS_STAY_DAY = B.isStayDay,
      A.FI_STAY_DAY = B.stayDay,
      A.FI_STATUS= B.STATUS,
      A.FC_USER = B.USER_NAME,
      A.FD_MODIFICATION_DATE = CAST(B.MODIFICATION_DATE AS DATE)
  WHEN NOT MATCHED THEN
  INSERT (
    FI_LOAN_STATUS_ID,
    FI_TRIGGER_ID,
    FI_IS_TRIGGERS,
    FI_IS_STAY_DAY,
    FI_STAY_DAY,
    FI_NEXT_STATUS,
    FI_STATUS,
    FC_USER,
    FD_CREATED_DATE,
    FD_MODIFICATION_DATE )
  VALUES
    ( B.ID,
      B.TRIGGER_ID,
      B.TRIGGERS,
      B.isStayDay,
      B.stayDay,
      B.nextStatus,
      B.STATUS,
      B.USER_NAME,
      B.CREATED_DATE,
      B.MODIFICATION_DATE );

      PA_UPDATED_ROWS := SQL%ROWCOUNT;

  COMMIT;

  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      PA_STATUS_CODE := SQLCODE;
    PA_STATUS_MSG  := SQLERRM;
      SC_CREDIT.SP_ERROR_LOG('SP_SYNC_LOAN_STATUS_TRIGGER', SQLCODE, SQLERRM, DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, NULL,'');

  END SP_SYNC_LOAN_STATUS_TRIGGER;

/

GRANT EXECUTE ON SC_CREDIT.SP_SYNC_LOAN_STATUS_TRIGGER TO USRPURPOSEWS
/
GRANT EXECUTE ON SC_CREDIT.SP_SYNC_LOAN_STATUS_TRIGGER TO USRNCPCREDIT1
/
