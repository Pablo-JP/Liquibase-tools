CREATE OR REPLACE  PROCEDURE SC_CREDIT.SP_SEL_ACCRUED_PAYMENT_INTEREST (
    PA_LOAN_ID               IN NUMBER
     ,PA_ADMIN_CENTER_ID      IN NUMBER
      ,PA_STATUS_CODE         OUT NUMBER
          ,PA_STATUS_MSG          OUT VARCHAR2
          ,PA_CUR_SELECT          OUT SC_CREDIT.PA_TYPES.TYP_CURSOR)
    IS

  /* **************************************************************
   * DESCRIPTION: SELECT IN TABLE INTEREST
   * PRECONDITIONS:
   * CREATED DATE: 04/11/2024
   * MODIFIC DATE: 12/11/2024
   * CREATOR: IVAN LOPEZ
   ************************************************************** */

   CSL_0                 CONSTANT SIMPLE_INTEGER := 0;
   CSL_1                 CONSTANT SIMPLE_INTEGER := 1;
   CSL_SP                CONSTANT SIMPLE_INTEGER := 1;
   CSL_2002              CONSTANT SIMPLE_INTEGER := -20002;
    CSL_MSG_SUCCESS       CONSTANT VARCHAR2(20)   := 'SUCCESS';
   CSL_NOT_DATA         CONSTANT VARCHAR2(20)   := 'NO INTEREST FOUND';
   CSL_NOT_LOAN         CONSTANT VARCHAR2(20)   := 'NO LOAN FOUND';
   CSL_PAYMENT         CONSTANT VARCHAR2(20)   := 'PAYMENT';
   CSL_DUE_DATE         CONSTANT VARCHAR2(20)   := 'DUE DATE';

    VL_LOAN  NUMBER(15,0);
    VL_ADMIN_CENTER NUMBER(8,0);
    VL_PAYMENT_NUMBER NUMBER(3,0);
    VL_DAYS_ACUM NUMBER(4,0);
    VL_ACCRUED_INTEREST_BALANCE NUMBER(14,4);
    VL_ACCRUED_INTEREST_LOAN NUMBER(14,4);
    VL_LOAN_STATUS   NUMBER(3,0);
    VL_ORDER  NUMBER(3,0);


   BEGIN

   PA_CUR_SELECT := NULL;

    --CONSULT LOAN,INTEREST,SCHEDULE
      SELECT B.FI_LOAN_ID AS FI_LOAN_ID,
            B.FI_ADMIN_CENTER_ID AS FI_ADMIN_CENTER_ID,
            NVL(A.FI_PAYMENT_NUMBER_ID,0) AS  FI_PAYMENT_NUMBER_ID,
            NVL(A.FI_DAYS_ACUM_BY_TERM,0) AS FI_DAYS_ACUM_BY_TERM,
                CASE WHEN FC_CONDITION_INTEREST IN (CSL_PAYMENT,CSL_DUE_DATE) THEN 0
                ELSE NVL(TRUNC(A.FN_ACCRUED_INTEREST_BALANCE,2),0) END AS INTEREST_BALANCE_DAY,
            NVL(TRUNC(A.FN_ACCRUED_INTEREST_LOAN - a.FN_PAYMENT_INTEREST,2),0) AS INTEREST_DAY_LOAN,
            NVL(B.FI_LOAN_STATUS_ID,0) AS STATUS_LOAN,
           NVL(ROW_NUMBER() OVER (PARTITION BY A.FI_LOAN_ID ORDER BY A.FI_PAYMENT_NUMBER_ID DESC,A.FI_DAYS_ACUM_BY_TERM DESC),0) AS ORDEN
    INTO VL_LOAN,VL_ADMIN_CENTER,VL_PAYMENT_NUMBER,VL_DAYS_ACUM,VL_ACCRUED_INTEREST_BALANCE,VL_ACCRUED_INTEREST_LOAN,VL_LOAN_STATUS,VL_ORDER
    FROM sc_credit.ta_loan B
    LEFT OUTER  JOIN SC_CREDIT.TA_LOAN_INTEREST A
    ON B.FI_LOAN_ID =A.FI_LOAN_ID
    AND B.FI_ADMIN_CENTER_ID = A.FI_ADMIN_CENTER_ID
    WHERE B.FI_LOAN_ID = PA_LOAN_ID
    AND B.FI_ADMIN_CENTER_ID = PA_ADMIN_CENTER_ID
    FETCH NEXT 1 ROW ONLY;

        PA_STATUS_CODE := CSL_0;
        PA_STATUS_MSG  := CSL_MSG_SUCCESS;

      IF  VL_PAYMENT_NUMBER = CSL_0 THEN

        PA_STATUS_MSG := CSL_NOT_DATA;

      END IF;

       OPEN PA_CUR_SELECT FOR
        SELECT VL_LOAN AS FI_LOAN_ID,
               VL_ADMIN_CENTER AS FI_ADMIN_CENTER_ID,
               VL_PAYMENT_NUMBER AS FI_PAYMENT_NUMBER_ID,
               VL_DAYS_ACUM AS FI_DAYS_ACUM_BY_TERM,
               VL_ACCRUED_INTEREST_BALANCE AS INTEREST_BALANCE_DAY,
               VL_ACCRUED_INTEREST_LOAN AS  INTEREST_DAY_LOAN,
               VL_LOAN_STATUS AS STATUS_LOAN
               ,VL_ORDER AS ORDEN FROM DUAL;


     EXCEPTION
     WHEN NO_DATA_FOUND THEN
      PA_STATUS_CODE := CSL_0;
        PA_STATUS_MSG  := CSL_NOT_LOAN;
         SC_CREDIT.SP_ERROR_LOG(UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_SP)
                                    ,SQLCODE
                                    ,SQLERRM
                                    ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
                                    ,PA_LOAN_ID || PA_ADMIN_CENTER_ID
                                    ,NULL);

      WHEN OTHERS THEN
        PA_STATUS_CODE := SQLCODE;
        PA_STATUS_MSG := SQLERRM  || ' -> ' ||  DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
         SC_CREDIT.SP_ERROR_LOG(UTL_CALL_STACK.SUBPROGRAM(CSL_1)(CSL_SP)
                                    ,SQLCODE
                                    ,SQLERRM
                                    ,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
                                    ,PA_LOAN_ID || PA_ADMIN_CENTER_ID
                                    ,NULL);

END SP_SEL_ACCRUED_PAYMENT_INTEREST;

/

GRANT EXECUTE ON SC_CREDIT.SP_SEL_ACCRUED_PAYMENT_INTEREST TO USRNCPCREDIT1
/
GRANT EXECUTE ON SC_CREDIT.SP_SEL_ACCRUED_PAYMENT_INTEREST TO USRPURPOSEWS
/
GRANT EXECUTE ON SC_CREDIT.SP_SEL_ACCRUED_PAYMENT_INTEREST TO USRCREDIT02
/
GRANT EXECUTE ON SC_CREDIT.SP_SEL_ACCRUED_PAYMENT_INTEREST TO USRBTCCREDIT1
/
